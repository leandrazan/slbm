% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_gev_expsc.R
\name{fit_gev_univ_trend}
\alias{fit_gev_univ_trend}
\title{GEV fit with trend}
\usage{
fit_gev_univ_trend(data, method = "BFGS", maxiter = 100, hessian = FALSE, type)
}
\arguments{
\item{data}{A tibble containing values of the unique sliding BM along with the
corresponding value of the temporal covariate and the frequency of occurence of
the respective tupel. Can be obtained by applying \code{\link{get_uniq_bm()}}.}

\item{method}{The method used during optimisation; passed to optim.}

\item{maxiter}{Passed to optim.}

\item{hessian}{logical; whether to return the hessian matrix.}

\item{type}{One of 'scale' or 'shift', see details.}
}
\value{
A list containing the parameter estimates, the value of the negative log-Likelihood,
the convergence code (ouput from \code{optim()}, 0 means everything was ok)
and the hessian (if \code{hessian = TRUE}).
}
\description{
Fit a model that either shifts or scales with a temporal covariate
to univariate data
}
\details{
The argument given in type determines whether the observations shift or scale
with time. For a temporal covariate \eqn{(X_t)_t}, shifting corresponds to a shift
in the location parameter as follows:
\deqn{ \mu(t) = \mu_0 + \mu_1 X_t , \sigma(t) = \sigma_0, \gamma(t) = \gamma}
while scaling corresponds to the model where
\deqn{ \mu(t) = \mu_0 \exp(\alpha X_t /\mu_0),  \sigma(t) = \sigma_0 \exp(\alpha X_t /\mu_0),
\gamma(t) = \gamma,
}
as inspired by the Clausius-Clapeyron relation.
}
\examples{
#' ##### generate some data #####
blcksz <- 90
xx <- evd::rgpd(100*90, shape = 0.2)

yy <- data.frame(Station = "X1", Obs = xx)

# define a temporal covariate that is constant over a block of length blcksz
temp_cvrt <- rep(1:100/100, each = blcksz)[1:(99*blcksz + 1)]

bms <- get_uniq_bm(yy, blcksz, temp_cvrt = temp_cvrt, looplastblock = FALSE)
bms <- bms$uniq_data[[1]]
bms
###############################
fit_gev_univ_trend(data = bms, hessian = TRUE, type = "shift")

}
