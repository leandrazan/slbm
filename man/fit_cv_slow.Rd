% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_cv_slow.R
\name{fit_cv_slow}
\alias{fit_cv_slow}
\title{Estimate quantiles and compute quantile score based on cross-validation}
\usage{
fit_cv_slow(
  data,
  djbm,
  leave_out,
  blcksz,
  ps = 1 - 1/c(2, 5, 10, 20, 50, 100, 200)
)
}
\arguments{
\item{data}{The daily (hourly, subhourly ...) data from which block maxima are computed}

\item{djbm}{dataframe with columns 'obs' and 'Index' containing observed disjoint block
maxima and and Index (e.g. the year/season in which the observation was made)}

\item{leave_out}{The indices you want to leave out from the training data; observations
with these indices make up the test data}

\item{blcksz}{The blocksize for computing block maxima}

\item{ps}{the quantiles which you want to estimate and compute the quantile score for}
}
\value{
tibble containing the estimated parameters, the estimation method, the
estimated quantiles, the test set as well as the corresponding quantile scores.
For a large number of cross-validations, this function is very slow.
Use 'cv_fit_eff' in that case, which is more efficient.
}
\description{
This function split the data into a training and a test set,
fits a GEV distribution to block maxima of the training set, estimates quantiles
based on the fit and then computes the quantile score on the test set.
GEV distributions are fitted based on both disjoint and sliding block maxima.
}
\examples{
df <- data.frame(obs = evd::rgpd(30*50), Index = rep(1:50, each = 30))
fit_cv_slow(df, data.frame( obs = blockmax(df$obs, r = 30, "disjoint"), Index = 1:50),
leave_out = c(4, 35, 42),  blcksz = 30)
}
