% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blockmax.r
\name{blockmax}
\alias{blockmax}
\title{Compute Disjoint or Sliding Block Maxima of a Univariate Time Series}
\usage{
blockmax(data, r, method = c("disjoint", "sliding"), looplastblock = FALSE)
}
\arguments{
\item{data}{a vector of length n representing the time series}

\item{r}{the block length parameter}

\item{method}{either \code{disjoint} or \code{sliding}}

\item{looplastblock}{logical; applies only when method is 'sliding'. If TRUE (not the default)
the first disjoint block of observations is concatenated to the last disjoint block of observations
in order to give each observation the same
chance to appear repeatedly in the sliding block maxima sample.}
}
\value{
The time series of disjoint block maxima
(a vector of length \eqn{n/r} or \eqn{\lfloor n/r \rfloor} +1, see details)
or sliding block maxima
(a vector of length \eqn{n-r+1})
}
\description{
For a given univariate time series of length n and block size
parameter r (\eqn{1 \le r \le n}), \code{blockmax} computes either the time
series of disjoint (non-overlapping) or sliding (overlapping) block maxima.
}
\details{
If the length of \code{data} is not a multiple of the block length \code{r},
the last block maximum returned when using the \code{disjoint}-method is the maximum
of the remaining \eqn{(\lfloor n/r\rfloor) +1) \cdot r -n)} observations, where \eqn{n}
is the length of the data.
}
\examples{
x <- runif(200)
blockmax(x, 20, "disjoint")
blockmax(x, 20, "sliding")
}
