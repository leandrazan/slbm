% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_mda_data.R
\name{sim_spatial}
\alias{sim_spatial}
\title{Simulate data from the MDA of a spatial GEV model}
\usage{
sim_spatial(
  mdadat,
  params,
  spat.cov,
  temp.cov = NULL,
  loc.sp.form = ~1,
  scale.sp.form = ~1,
  loc.temp.form = NULL,
  scale.temp.form = NULL
)
}
\arguments{
\item{mdadat}{Data matrix with observations in the domain of attraction of the GEV
distribution, as generated from \code{\link{MDAdata}}.}

\item{params}{The vector of coefficients for the linear models of covariates.}

\item{spat.cov}{A data frame containing the spatial covariates used in the formulations
of the spatial formulas.}

\item{temp.cov}{A named matrix containing the temporal covariates used in the formulations
of the temporal formulas.}

\item{loc.sp.form}{R formula definining the spatial model for the location parameter.}

\item{scale.sp.form}{R formula definining the spatial model for the scale parameter.}

\item{loc.temp.form}{R formula definining the temporal trend for the location parameter.}

\item{scale.temp.form}{R formula definining the temporal trend for the scale parameter.}
}
\value{
A matrix with same dimension \eqn{n x d} as input data,
transformed with the affine linear transformation
\eqn{ \sigma(t,d) X_i + \mu(t,d)}.
}
\description{
Simulate data from the MDA of a spatial-temporal GEV model with the dependence
structure of a max-stable process.
The input data \eqn{X_1, X_2 ..., } is transformed through
}
\details{
\eqn{ \sigma(t,d) X_i + \mu(t,d)},
where \eqn{\sigma(t,d), \mu(t,d)} are linear functions of spatial and temporal
covariates. Theoretical values of the resulting GEV parameter coefficients
in case the \eqn{X_i} are GPD distributed can be computed with
\code{\link{theo_pars}}.
}
\examples{
data("GMST")
ny <- 100
blcksz <- 90
coords <- cbind(spatial_cvrt$lat, spatial_cvrt$lon)
colnames(coords ) <- c("lat", "lon")
mdax <- MDAdata(ny*blcksz, locations = coords, margins = list(distr = "gpd", shape = -0.2),
                ms = list(kovmod = "whitmat", nugget = 0, range = 3, smooth = 0.44))

tempcov1 <- data.frame(GMST = rep(GMST$smoothedGMST[1:100], each = 90))
xx <- sim_spatial(mdax, params = c("loc0" = 10, "loc1" = 2, "loc2" = 0.05,
                                   "scale0" = 2, "scale1" = 0.2, "shape" = -0.2,
                                   "tempLoc" = 2),
                  loc.sp.form = ~ lat + lon, scale.sp.form = ~ lon,
                  spat.cov = spatial_cvrt, temp.cov = tempcov1,
                  loc.temp.form = ~ GMST)

### plot the resulting disjoint block maxima
bmx <- apply(xx, 2, blockmax, r = 90,  "disjoint")
plot.ts(bmx)
# fit spatio-temporal GEV model
\dontrun{
tempcovdj <- matrix(GMST$smoothedGMST[1:100])
colnames(tempcovdj) <- "GMST"
SpatialExtremes::fitspatgev(bmx, covariables = as.matrix(spatial_cvrt),
loc.form = ~ lat + lon, scale.form = ~lon,
shape.form = ~ 1, temp.form.loc = ~ GMST,
temp.cov = tempcovdj)$fitted.values
}

theo_pars(90, loc0 = 10, scale0 = 2, loclat = 2, scalelat = 0, loclon = 0.05,
 scalelon = 0.2,
loctemp = 2, shape = -0.2)

}
