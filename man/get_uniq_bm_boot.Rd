% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/student_boot_sl.R
\name{get_uniq_bm_boot}
\alias{get_uniq_bm_boot}
\title{Compute unique block maxima for bootstrap}
\usage{
get_uniq_bm_boot(
  data,
  blcksz,
  indexblock,
  temp_cvrt = NULL,
  looplastblock = TRUE,
  returnfullsamp = FALSE
)
}
\arguments{
\item{data}{tibble with columns named "Station" and "Obs", where the latter
contains daily observations}

\item{blcksz}{The blocksize parameter}

\item{indexblock}{A matrix with columns \code{blockind} and \code{obsind}, where \code{obsind} is the
consecutive counter of the observations (from to \code{nrow(data)}) and \code{blockind} is the
index of the K-block the observation belongs to (here, K is the blockbootstrap parameter).}

\item{temp_cvrt}{either NULL or the temporal covariate}

\item{looplastblock}{logical; whether within the blocks of size \code{K} times \code{blcksz} the
oobservations are looped (first block concatenated to last block)}

\item{returnfullsamp}{logical; whether the full (looped) sliding block maxima sample shall
be returned. Needed for parametric covariance estimation.}
}
\value{
Returns a tibble with columns \code{Station}, \code{Kblockind},\code{uniq_data} and, if \code{returnfullsamp  = TRUE},
\code{full_data}. These are the station reference, the block index of the blocks of size \code{K} times \code{blcksz},
the sample of unique sliding block maxima values and their frequency and the looped sliding block maxima.
}
\description{
Compute unique block maxima for bootstrap
}
\examples{
blcksz <- 90
ny <- 50
xx <- evd::rgpd(ny*blcksz, shape = 0.2)
df.xx <- data.frame(Station = "X1", Obs = xx)
k <- 3
ndata <- blcksz * ny
.nKblocks <- ceiling(ndata/(k*blcksz))
indexblock <- data.frame(blockind = c(rep(1:(.nKblocks-1), each = k*blcksz),
                                      rep(.nKblocks, ndata - k*blcksz*(.nKblocks-1))),
                         obsind = 1:ndata)

sluniq_wb <- get_uniq_bm_boot(df.xx, blcksz = blcksz, indexblock = indexblock,
                              temp_cvrt = NULL, looplastblock = TRUE,
                              returnfullsamp = TRUE)

}
