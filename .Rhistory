B = 5, type = "shift", ref_gmst = c(0.5, 0.95), estimate_RL = TRUE, varmeth = "V")
ci_student_boot_sl(yy, Kblock = 4, blcksz = 90, temp.cov = rep(1:ny/ny, each = blcksz),
B = 5, type = "shift", ref_gmst = c(0.5, 0.95), estimate_RL = "both", varmeth = "V")
ci_student_boot_sl(yy, Kblock = 4, blcksz = 90, temp.cov = rep(1:ny/ny, each = blcksz),
B = 5, type = "shift", ref_gmst = c(0.5, 0.95), estimate_RL = TRUE, varmeth = "V")
devtools::load_all()
ci_student_boot_sl(yy, Kblock = 4, blcksz = 90, temp.cov = rep(1:ny/ny, each = blcksz),
B = 5, type = "shift", ref_gmst = c(0.5, 0.95), estimate_RL = TRUE, varmeth = "V")
est_sl_df
# number of blocks of size K*blcksz that are observed
.nKblocks <- ceiling(ndata/(k*blcksz))
# for each observation: which Kblock does it belong to, and is it in the last
# block of site blcksz within that larger Kblock
indexblock <- data.frame(blockind = c(rep(1:(.nKblocks-1), each = k*blcksz),
rep(.nKblocks, ndata - k*blcksz*(.nKblocks-1))),
obsind = 1:ndata)
# compute the unique sliding BM within each of the
# nKblocks of size Kblock, their frequency and their Kblockindex
# (index of the bigger block of size K the sliding BM belongs to)
sluniq_wb <- slbm::get_uniq_bm_boot(df.yy, blcksz = blcksz, indexblock = indexblock,
temp_cvrt = temp.cov, looplastblock = looplastblock,
returnfullsamp = TRUE)
full_slbm_Kblock <- sluniq_wb %>% dplyr::select(-uniq_data)
sluniq_wb <- sluniq_wb %>% dplyr::select(-full_data)
#  compute ML estimator
estim_Kblock <- tryCatch(slbm::fit_gev_univ(tidyr::unnest(sluniq_wb, cols = uniq_data),
type = type, hessian = TRUE), error = errfct(type))
# bootstrap RLs and compute their parametric variance estimation
bootres <- slbm::boot_sl(
sluniq = sluniq_wb,
slorig = full_slbm_Kblock,
blcksz = blcksz,
nKblocks = .nKblocks,
B = B,
type = type,
ref_gmst = ref_gmst,
Tyrl = Tyrl,
start_vals = estim_Kblock$mle,
scale.link = make.link("identity"),
reltol = 1e-09, estimate_RL = estimate_RL, varmeth = varmeth)
estim_Kblock$mle
# bootstrap RLs and compute their parametric variance estimation
bootres <- slbm::boot_sl(
sluniq = sluniq_wb,
slorig = full_slbm_Kblock,
blcksz = blcksz,
nKblocks = .nKblocks,
B = B,
type = type,
ref_gmst = ref_gmst,
Tyrl = Tyrl,
start_vals = data.frame(t(estim_Kblock$mle)),
scale.link = make.link("identity"),
reltol = 1e-09, estimate_RL = estimate_RL, varmeth = varmeth)
# bootstrap RLs and compute their parametric variance estimation
bootres <- slbm::boot_sl(
sluniq = sluniq_wb,
slorig = full_slbm_Kblock,
blcksz = blcksz,
nKblocks = .nKblocks,
B = B,
type = type,
ref_gmst = ref_gmst,
Tyrl = Tyrl,
start_vals = estim_Kblock$mle,
scale.link = make.link("identity"),
reltol = 1e-09, estimate_RL = estimate_RL, varmeth = "both")
# bootstrap RLs and compute their parametric variance estimation
bootres <- slbm::boot_sl(
sluniq = sluniq_wb,
slorig = full_slbm_Kblock,
blcksz = blcksz,
nKblocks = .nKblocks,
B = B,
type = type,
ref_gmst = ref_gmst,
Tyrl = Tyrl,
start_vals = estim_Kblock$mle,
scale.link = make.link("identity"),
reltol = 1e-09, estimate_RL = "both", varmeth = "both")
blcksz <- 90
ny <- 100
yy <-  evd::rgpd(ny*blcksz, shape = -0.2) + 2*rep(1:ny/ny, each = blcksz)
df.yy <- data.frame(Station = "X1", Obs = yy)
k <- 3
ndata <- blcksz * ny
.nKblocks <- ceiling(ndata/(k*blcksz))
indexblock <- data.frame(blockind = c(rep(1:(.nKblocks-1), each = k*blcksz),
rep(.nKblocks, ndata - k*blcksz*(.nKblocks-1))),
obsind = 1:ndata)
sluniq_wb <- get_uniq_bm_boot(df.yy, blcksz = blcksz, indexblock = indexblock,
temp_cvrt = rep(1:ny/ny, each = blcksz), looplastblock = TRUE,
returnfullsamp = TRUE)
full_slbm <- sluniq_wb %>% dplyr::select(-uniq_data)
sluniq_wb <- sluniq_wb %>% dplyr::select(-full_data)
estim_lo <- slbm::fit_gev_univ(tidyr::unnest(sluniq_wb, cols = uniq_data),
type = "shift", hessian = TRUE)
boot_sl(
sluniq = sluniq_wb,
slorig = full_slbm,
blcksz = blcksz,
nKblocks = .nKblocks,
B = 10,
type = "shift",
ref_gmst = (c(0.8, 0.9)),
Tyrl = c(50, 100),
start_vals = estim_lo$mle,
scale.link = make.link("identity"),
reltol = 1e-09, estimate_RL = TRUE)
boot_sl(
sluniq = sluniq_wb,
slorig = full_slbm,
blcksz = blcksz,
nKblocks = .nKblocks,
B = 10,
type = "shift",
ref_gmst = (c(0.8, 0.9)),
Tyrl = c(50, 100),
start_vals = estim_lo$mle,
scale.link = make.link("identity"),
reltol = 1e-09, estimate_RL = "both")
boot_sl(
sluniq = sluniq_wb,
slorig = full_slbm,
blcksz = blcksz,
nKblocks = .nKblocks,
B = 10,
type = "shift",
ref_gmst = (c(0.8, 0.9)),
Tyrl = c(50, 100),
start_vals = estim_lo$mle,
scale.link = make.link("identity"),
reltol = 1e-09, estimate_RL = "TRUE")
boot_sl(
sluniq = sluniq_wb,
slorig = full_slbm,
blcksz = blcksz,
nKblocks = .nKblocks,
B = 10,
type = "shift",
ref_gmst = (c(0.8, 0.9)),
Tyrl = c(50, 100),
start_vals = estim_lo$mle,
scale.link = make.link("identity"),
reltol = 1e-09, estimate_RL = FALSE)
boot_sl(
sluniq = sluniq_wb,
slorig = full_slbm,
blcksz = blcksz,
nKblocks = .nKblocks,
B = 10,
type = "shift",
ref_gmst = (c(0.8, 0.9)),
Tyrl = c(50, 100),
start_vals = estim_lo$mle,
scale.link = make.link("identity"),
reltol = 1e-09, estimate_RL = "both")
boot_sl(
sluniq = sluniq_wb,
slorig = full_slbm,
blcksz = blcksz,
nKblocks = .nKblocks,
B = 10,
type = "shift",
ref_gmst = (c(0.8, 0.9)),
Tyrl = c(50, 100),
start_vals = estim_lo$mle,
scale.link = make.link("identity"),
reltol = 1e-09, estimate_RL = TRUE)
devtools::load_all()
boot_sl(
sluniq = sluniq_wb,
slorig = full_slbm,
blcksz = blcksz,
nKblocks = .nKblocks,
B = 10,
type = "shift",
ref_gmst = (c(0.8, 0.9)),
Tyrl = c(50, 100),
start_vals = estim_lo$mle,
scale.link = make.link("identity"),
reltol = 1e-09, estimate_RL = TRUE)
boot_sl(
sluniq = sluniq_wb,
slorig = full_slbm,
blcksz = blcksz,
nKblocks = .nKblocks,
B = 10,
type = "shift",
ref_gmst = (c(0.8, 0.9)),
Tyrl = c(50, 100),
start_vals = estim_lo$mle,
scale.link = make.link("identity"),
reltol = 1e-09, estimate_RL = TRUE, varmeth = "both")
ci_student_boot_sl(yy, Kblock = 4, blcksz = 90, temp.cov = rep(1:ny/ny, each = blcksz),
B = 5, type = "shift", ref_gmst = c(0.5, 0.95), estimate_RL = TRUE, varmeth = "V")
ci_student_boot_sl(yy, Kblock = 4, blcksz = 90, temp.cov = rep(1:ny/ny, each = blcksz),
B = 5, type = "shift", ref_gmst = c(0.5, 0.95), estimate_RL = TRUE, varmeth = "V2")
?ci_student_boot_sl
library(slbm)
library(dplyr)
library(tidyr)
library(ggplot2)
data("GMST")
data("DailyTempNRW")
# extract observations from Aachen along with the Date of observation.
dailyAach <- DailyTempNRW$TimeSeries %>% select(Datetime, Aachen)
# plot the data
ggplot(dailyAach, aes( x = Datetime, y = Aachen)) + geom_line()
#  in the plot we see that from 2011 onwards there is no data,
# so we choose only years up to 2010:
dailyAach <-  dailyAach %>% filter(lubridate::year(Datetime) <= 2010)
anyNA(dailyAach) # no NA's left
# first and last year with observations:
fl_year <- c(min(lubridate::year(dailyAach$Datetime)), max(lubridate::year(dailyAach$Datetime)))
gmst <- GMST %>% filter(Year >= fl_year[1], Year <= fl_year[2])
ci_student_boot_sl(yy = , blcksz = 92, temp.cov = rep(1:ny/ny, each = blcksz),
B = 100, type = "shift", ref_gmst = c(0.5, 0.95))
dailyAach
blcksz <- 92
gmst %>% filter(Year %in% c(1970, 2010))
ci_student_boot_sl(yy = dailyAach$Aachen, blcksz = blcksz,
temp.cov = rep(gmst$smoothedGMST, each = blcksz),
B = 10, type = "shift", Tyrl = 100,
ref_gmst = refgmst$smoothedGMST,
)
refgmst <- gmst %>% filter(Year %in% c(1970, 2010))
ci_student_boot_sl(yy = dailyAach$Aachen, blcksz = blcksz,
temp.cov = rep(gmst$smoothedGMST, each = blcksz),
B = 10, type = "shift", Tyrl = 100,
ref_gmst = refgmst$smoothedGMST,
)
res_shift <- ci_student_boot_sl(yy = dailyAach$Aachen, blcksz = blcksz,
temp.cov = rep(gmst$smoothedGMST, each = blcksz),
B = 10, type = "shift", Tyrl = 100,
ref_gmst = refgmst$smoothedGMST,
)
res_shift
res_shift <- ci_student_boot_sl(yy = dailyAach$Aachen, blcksz = blcksz,
temp.cov = rep(gmst$smoothedGMST, each = blcksz),
B = 200, type = "shift", Tyrl = 100,
ref_gmst = refgmst$smoothedGMST, estimate_RL = "both"
)
devtools::build()
devtools::build()
library(slbm)
# first and last year with observations:
fl_year <- c(min(lubridate::year(dailyAach$Datetime)), max(lubridate::year(dailyAach$Datetime)))
gmst <- GMST %>% filter(Year >= fl_year[1], Year <= fl_year[2])
blcksz <- 92
refgmst <- gmst %>% filter(Year %in% c(1970, 2010))
res_shift <- ci_student_boot_sl(yy = dailyAach$Aachen, blcksz = blcksz,
temp.cov = rep(gmst$smoothedGMST, each = blcksz),
B = 2, type = "shift", Tyrl = 100, Kblock = 4,
ref_gmst = refgmst$smoothedGMST, estimate_RL = "both"
)
ci_student_boot_sl
devtools::install()
res_shift <- ci_student_boot_sl(yy = dailyAach$Aachen, blcksz = blcksz,
temp.cov = rep(gmst$smoothedGMST, each = blcksz),
B = 200, type = "shift", Tyrl = 100, Kblock = 4,
ref_gmst = refgmst$smoothedGMST, estimate_RL = "both"
)
devtools::install()
res_shift <- ci_student_boot_sl(yy = dailyAach$Aachen, blcksz = blcksz,
temp.cov = rep(gmst$smoothedGMST, each = blcksz),
B = 200, type = "shift", Tyrl = 100, Kblock = 4,
ref_gmst = refgmst$smoothedGMST, estimate_RL = "both"
)
devtools::build()
devtools::build()
devtools::build()
devtools::install()
res_shift <- ci_student_boot_sl(yy = dailyAach$Aachen, blcksz = blcksz,
temp.cov = rep(gmst$smoothedGMST, each = blcksz),
B = 200, type = "shift", Tyrl = 100, Kblock = 4,
ref_gmst = refgmst$smoothedGMST, estimate_RL = "both"
)
res_shift <- ci_student_boot_sl(yy = dailyAach$Aachen, blcksz = blcksz,
temp.cov = rep(gmst$smoothedGMST, each = blcksz),
B = 20, type = "shift", Tyrl = 100, Kblock = 4,
ref_gmst = refgmst$smoothedGMST, estimate_RL = "both"
)
res_shift
devtools::build()
devtools::load_all()
library(tidyverse)
xx <- dailyPrec %>% filter(lubridate::month(Date) %in% 6:8,
lubridate::year(Date) >= 1950)
gmst <- GMST %>% filter(Year >= 1950, Year <= 2010)
bms <- get_uniq_bm(xx$cumPrec, 92, temp_cvrt = rep(gmst$smoothedGMST, each = 92) , looplastblock = FALSE)
# full sample of sliding for estimaing the covariance matrix
slbm <- blockmax(xx$cumPrec, r = 92, "sliding")
estim <- fit_gev_univ(data = bms, type = "scale", hessian = TRUE, rel_trend = FALSE)
estim
xx <- dailyPrec %>% filter(lubridate::month(Date) %in% 7:9,
lubridate::year(Date) >= 1950)
gmst <- GMST %>% filter(Year >= 1950, Year <= 2010)
bms <- get_uniq_bm(xx$cumPrec, 92, temp_cvrt = rep(gmst$smoothedGMST, each = 92) , looplastblock = FALSE)
# full sample of sliding for estimaing the covariance matrix
slbm <- blockmax(xx$cumPrec, r = 92, "sliding")
estim <- fit_gev_univ(data = bms, type = "scale", hessian = TRUE, rel_trend = FALSE)
estim
bb <- score.fun(slbm, theta = estim$mle, temp.cov = rep(gmst$smoothedGMST, each = 92)[1:length(slbm)],
type = "scale", chain = TRUE, rel_trend = FALSE)
est_var_chain(orig_slbm = slbm, est_par =  estim, blcksz =  blcksz,
temp.cov = rep(gmst$smoothedGMST, each = 92)[1:length(slbm)],
type = "scale", varmeth = "both", rel_trend = FALSE)
xx <- dailyPrec %>% filter(lubridate::month(Date) %in% 8:10,
lubridate::year(Date) >= 1950)
gmst <- GMST %>% filter(Year >= 1950, Year <= 2010)
bms <- get_uniq_bm(xx$cumPrec, 92, temp_cvrt = rep(gmst$smoothedGMST, each = 92) , looplastblock = FALSE)
# full sample of sliding for estimaing the covariance matrix
slbm <- blockmax(xx$cumPrec, r = 92, "sliding")
estim <- fit_gev_univ(data = bms, type = "scale", hessian = TRUE, rel_trend = FALSE)
estim
xx <- dailyPrec %>% filter(lubridate::month(Date) %in% 9:11,
lubridate::year(Date) >= 1950)
gmst <- GMST %>% filter(Year >= 1950, Year <= 2010)
bms <- get_uniq_bm(xx$cumPrec, 92, temp_cvrt = rep(gmst$smoothedGMST, each = 92) , looplastblock = FALSE)
# full sample of sliding for estimaing the covariance matrix
slbm <- blockmax(xx$cumPrec, r = 92, "sliding")
estim <- fit_gev_univ(data = bms, type = "scale", hessian = TRUE, rel_trend = FALSE)
estim
xx <- dailyPrec %>% filter(lubridate::month(Date) %in% 4:9,
lubridate::year(Date) >= 1950)
gmst <- GMST %>% filter(Year >= 1950, Year <= 2010)
bms <- get_uniq_bm(xx$cumPrec, 92, temp_cvrt = rep(gmst$smoothedGMST, each = 92) , looplastblock = FALSE)
# full sample of sliding for estimaing the covariance matrix
slbm <- blockmax(xx$cumPrec, r = 92, "sliding")
blcksz <- 183
xx <- dailyPrec %>% filter(lubridate::month(Date) %in% 4:9,
lubridate::year(Date) >= 1950)
bms <- get_uniq_bm(xx$cumPrec, blcksz, temp_cvrt = rep(gmst$smoothedGMST, each = blcksz) , looplastblock = FALSE)
# full sample of sliding for estimaing the covariance matrix
slbm <- blockmax(xx$cumPrec, r = blcksz, "sliding")
estim <- fit_gev_univ(data = bms, type = "scale", hessian = TRUE, rel_trend = FALSE)
estim
est_var_chain(orig_slbm = slbm, est_par =  estim, blcksz =  blcksz,
temp.cov = rep(gmst$smoothedGMST, each = blcksz)[1:length(slbm)],
type = "scale", varmeth = "both", rel_trend = FALSE)
est_var_chain(orig_slbm = slbm, est_par =  estim, blcksz =  blcksz,
temp.cov = rep(gmst$smoothedGMST, each = blcksz)[1:length(slbm)],
type = "scale", varmeth = "both", rel_trend = FALSE)
est_var_univ_nochain
devtools::load_all()
est_var_univ_nochain
est_var_univ()
est_var_univ
devtools::load_all()
blcksz <- 183
xx <- dailyPrec %>% filter(lubridate::month(Date) %in% 4:9,
lubridate::year(Date) >= 1950)
dailyPrec
blcksz <- 183
xx <- dailyPrec %>% filter(lubridate::month(Date) %in% 4:9,
lubridate::year(Date) >= 1950)
library(tidyverse)
xx <- dailyPrec %>% filter(lubridate::month(Date) %in% 4:9,
lubridate::year(Date) >= 1950)
gmst <- GMST %>% filter(Year >= 1950, Year <= 2010)
bms <- get_uniq_bm(xx$cumPrec, blcksz, temp_cvrt = rep(gmst$smoothedGMST, each = blcksz) , looplastblock = FALSE)
# full sample of sliding for estimaing the covariance matrix
slbm <- blockmax(xx$cumPrec, r = blcksz, "sliding")
estim <- fit_gev_univ(data = bms, type = "scale", hessian = TRUE, rel_trend = FALSE)
estim
bb <- score.fun(slbm, theta = estim$mle, temp.cov = rep(gmst$smoothedGMST, each = 92)[1:length(slbm)],
type = "scale", chain = TRUE, rel_trend = FALSE)
bb <- score.fun(slbm, theta = estim$mle, temp.cov = rep(gmst$smoothedGMST, each = 92)[1:length(slbm)],
type = "scale", chain = FALSE, rel_trend = FALSE)
bb <- score.fun(slbm, theta = estim$mle, temp.cov = rep(gmst$smoothedGMST, each = 92)[1:length(slbm)],
type = "scale", chain = FALSE)
bb <- score.fun(slbm, theta = estim$mle, temp.cov = rep(gmst$smoothedGMST, each = 92)[1:length(slbm)],
type = "scale", chain = FALSE, rel_trend = FALSE)
aa <- score.fun(slbm, theta = estim$mle, temp.cov = rep(gmst$smoothedGMST, each = 92)[1:length(slbm)],
type = "scale", chain = TRUE, rel_trend = FALSE)
plot.ts(t(bb))
plot.ts(t(aa))
plot.ts(t(bb))
plot.ts(t(aa))
plot.ts(t(bb))
bb <- score.fun(slbm, theta = estim$mle, temp.cov = rep(gmst$smoothedGMST, each = blcksz)[1:length(slbm)],
type = "scale", chain = FALSE, rel_trend = FALSE)
aa <- score.fun(slbm, theta = estim$mle, temp.cov = rep(gmst$smoothedGMST, each = blckz)[1:length(slbm)],
type = "scale", chain = TRUE, rel_trend = FALSE)
aa <- score.fun(slbm, theta = estim$mle, temp.cov = rep(gmst$smoothedGMST, each = blcksz)[1:length(slbm)],
type = "scale", chain = TRUE, rel_trend = FALSE)
plot.ts(t(bb))
plot.ts(t(aa))
devtools::document()
devtools::build(vignettes = FALSE)
devtools::check(vignettes = FALSE)
usethis::use_package("SpatialExtremes")
devtools::check(vignettes = FALSE)
score.fun
devtools::build(vignettes = FALSE)
devtools::build(vignettes = FALSE)
slbm::est_var_univ_nochain
install.packages(slbm)
devtools::install()
devtools::build(vignettes = FALSE)
devtools::load_all()
library(tidyverse)
#
blcksz <- 183
xx <- dailyPrec %>% filter(lubridate::month(Date) %in% 4:9,
lubridate::year(Date) >= 1950)
gmst <- GMST %>% filter(Year >= 1950, Year <= 2010)
bms <- get_uniq_bm(xx$cumPrec, blcksz, temp_cvrt = rep(gmst$smoothedGMST, each = blcksz) , looplastblock = FALSE)
# full sample of sliding for estimaing the covariance matrix
slbm <- blockmax(xx$cumPrec, r = blcksz, "sliding")
estim <- fit_gev_univ(data = bms, type = "scale", hessian = TRUE, rel_trend = FALSE)
estim
bb <- score.fun(slbm, theta = estim$mle, temp.cov = rep(gmst$smoothedGMST, each = blcksz)[1:length(slbm)],
type = "scale", chain = TRUE, rel_trend = FALSE)
plot.ts(t(bb))
cvrt_sl <- rep(gmst$smoothedGMST, each = blcksz)[1:length(slbm)]
estim$mle
estim$mle[3]
c("mu" = 0, "sigma" = 1, estim$mle[3], "alpha" = 0 )
aa <- score.fun( (slbm - estim$mle[1]*exp(estim$mle[4]*cvrt_sl))/(estim$mle[2]*exp(estim$mle[4]*cvrt_sl)) ,
theta = c("mu" = 0, "sigma" = 1, estim$mle[3], "alpha" = 0 ), temp.cov = cvrt_sl,
type = "scale", chain = TRUE, rel_trend = FALSE)
lines(t(aa))
plot.ts(bb[1, ])
lines(aa[1, ], col = 2)
estim$mle
Tsig <- diag(estim$mle[2], estim$mle[2], 1)
lines( (Tsig %*% aa)[1, ], col = 2)
dim(aa)
Tsi
Tsig
Tsig <- diag(c(estim$mle[2], estim$mle[2], 1))
lines( (Tsig %*% aa)[1, ], col = 2)
plot.ts(bb[1, ])
lines( (Tsig %*% aa)[1, ], col = 2)
plot.ts(bb[1, ])
lines( ( estim$mle[2]*exp(estim$mle[4]*cvrt_sl)*aa[1, ], col = 2)
lines( estim$mle[2]*exp(estim$mle[4]*cvrt_sl)*aa[1, ], col = 2)
plot.ts(aa[1, ])
lines( estim$mle[2]*exp(estim$mle[4]*cvrt_sl)*bb[1, ], col = 2)
plot.ts(aa[2, ])
lines( estim$mle[2]*exp(estim$mle[4]*cvrt_sl)*bb[2, ], col = 2)
plot.ts(aa[3, ])
lines( estim$mle[2]*exp(estim$mle[4]*cvrt_sl)*bb[3, ], col = 2)
plot.ts(aa[3, ])
lines(bb[3, ], col = 2)
plot.ts(bb[1, ])
plot.ts(aa[1, ])
plot.ts(aa[3, ])
lines( estim$mle[2]*exp(estim$mle[4]*cvrt_sl)*bb[3, ], col = 2)
plot.ts(aa[2, ])
> lines( estim$mle[2]*exp(estim$mle[4]*cvrt_sl)*bb[2, ], col = 2)
plot.ts(aa[2, ])
lines( estim$mle[2]*exp(estim$mle[4]*cvrt_sl)*bb[2, ], col = 2)
plot.ts(aa[2, ])
> lines( estim$mle[2]*exp(estim$mle[4]*cvrt_sl)*bb[2, ], col = 2)
plot.ts(aa[3, ])
lines(bb[3, ])
plot.ts(aa[3, ])
lines(bb[3, ], col = 2)
plot.ts(aa[3, ])
plot.ts(aa[2, ])
lines( estim$mle[2]*exp(estim$mle[4]*cvrt_sl)*bb[2, ], col = 2)
lines(bb[2, ], col = 3)
plot.ts(t(bb))
plot.ts(t(aa))
plot(estim$mle[2]*exp(estim$mle[4]*cvrt_sl))
plot.ts(estim$mle[2]*exp(estim$mle[4]*cvrt_sl))
devtools::load_all()
#
blcksz <- 183
xx <- dailyPrec %>% filter(lubridate::month(Date) %in% 4:9,
lubridate::year(Date) >= 1950)
gmst <- GMST %>% filter(Year >= 1950, Year <= 2010)
bms <- get_uniq_bm(xx$cumPrec, blcksz, temp_cvrt = rep(gmst$smoothedGMST, each = blcksz) , looplastblock = FALSE)
# full sample of sliding for estimaing the covariance matrix
slbm <- blockmax(xx$cumPrec, r = blcksz, "sliding")
estim <- fit_gev_univ(data = bms, type = "scale", hessian = TRUE, rel_trend = FALSE)
estim
bb <- score.fun(slbm, theta = estim$mle, temp.cov = rep(gmst$smoothedGMST, each = blcksz)[1:length(slbm)],
type = "scale", chain = TRUE, rel_trend = FALSE)
cvrt_sl <- rep(gmst$smoothedGMST, each = blcksz)[1:length(slbm)]
aa <- score.fun( (slbm - estim$mle[1]*exp(estim$mle[4]*cvrt_sl))/(estim$mle[2]*exp(estim$mle[4]*cvrt_sl)) ,
theta = c("mu" = 0, "sigma" = 1, estim$mle[3], "alpha" = 0 ), temp.cov = cvrt_sl,
type = "scale", chain = TRUE, rel_trend = FALSE)
est_var_chain(orig_slbm = slbm, est_par =  estim, blcksz =  blcksz,
temp.cov = rep(gmst$smoothedGMST, each = blcksz)[1:length(slbm)],
type = "scale", varmeth = "both", rel_trend = FALSE)
devtools::load_all()
devtools::load_all()
est_var_chain(orig_slbm = slbm, est_par =  estim, blcksz =  blcksz,
temp.cov = rep(gmst$smoothedGMST, each = blcksz)[1:length(slbm)],
type = "scale", varmeth = "both", rel_trend = FALSE)
devtoold
devtools::build(vignettes = FALSE)
devtools::install()
est_var_uni
est_var_univ
library(slbm)
est_var_univ
devtools::build(vignettes = FALSE)
est_var_univ_chain
devtools::load_all()
est_var_univ_chain
16*100&3600
16*100/3600
devtools::build(vignettes = FALSE)
library(slbm)
est_var_univ
devtools::build(vignettes = FALSE)
devtools::build(vignettes = FALSE)
