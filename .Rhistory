plot.ts(unlist(uu$full_data))
plot.ts(unlist(uu$full_data) %>% unique8)
plot.ts(unlist(uu$full_data) %>% unique())
uu1
plot.ts(unlist(uu1$uniq_data) %>% unique())
uu1$uniq_data
uu1$uniq_data
map_dfr(uu1$uniq_data, ~.x)
plot.ts(unique(map_dfr(uu1$uniq_data, ~.x)$slbm)
)
unique(map_dfr(uu1$uniq_data, ~.x)$slbm)
uu1
uu
uu$data
map(uu$data, ~ .x$Obs)
map_dfr(uu$data, ~ .x)
plot.ts(map_dfr(uu$data, ~ .x)$Obs)
plot.ts(map_dfr(uu$data, ~ .x)$Obs)
plot.ts(map_dfr(uu$full_data, ~ .x)$Obs)
plot.ts(map_dfr(uu$full_data, ~ .x)$slbm)
xx <- map_dfr(uu$full_data, ~ .x)$slbm
xx
plot.ts(xx)
data.frame(xx)
xx <- map_dfr(uu$full_data, ~ .x)
xx
plot.ts(xx$slbm)
xx %>% group_by(slbm)
xx %>% group_by(slbm) %>% summarise(n = n())
yy <- xx %>% group_by(slbm) %>% summarise(n = n())
yy
plot.ts(yy)
uu1
uu1$uniq_data
map_dfr(uu1$uniq_data, ~ .x)
plot.ts(sort(map_dfr(uu1$uniq_data, ~ .x)$slbm))
lines(yy$slbm, col = 2)
uu
uu1
data %>% dplyr::group_by(Station, Kblockind) %>% tidyr::nest()
seq(15, 140, 15)
seq(15, 140, 15)/3
seq(15, 140, 15)
seq(30, 135, 15)
seq(36, 141, 15)
seq(36, 141, 15)/2
seq(36, 141, 15)/3
sluniq_wb <- get_uniq_bm_boot(df.xx, blcksz = blcksz, indexblock = indexblock,
temp_cvrt = NULL, looplastblock = TRUE,
returnfullsamp = TRUE)
data
dim(data)
data$Kblockind <- indexblock$blockind
4500/3
4500/(90*3)
45*90
indexblock
dim(indexb)
dim(indexblock)
max(indexblock$blockind)
max(indexblock$obsind)
4500/90
50/3
length(data)
nrow(data)
4500/3
4500/(90*3)
data
head(data)
blcksz <- 90
ny <- 51
xx <- evd::rgpd(ny*blcksz, shape = 0.2)
df.xx <- data.frame(Station = "X1", Obs = xx)
k <- 3
ndata <- blcksz * ny
.nKblocks <- ceiling(ndata/(k*blcksz))
indexblock <- data.frame(blockind = c(rep(1:(.nKblocks-1), each = k*blcksz),
rep(.nKblocks, ndata - k*blcksz*(.nKblocks-1))),
obsind = 1:ndata)
sluniq_wb <- get_uniq_bm_boot(df.xx, blcksz = blcksz, indexblock = indexblock,
temp_cvrt = NULL, looplastblock = TRUE,
returnfullsamp = TRUE)
data$Kblockind <- indexblock$blockind
# return only the weighted sliding BM sample
data %>% dplyr::group_by(Station, Kblockind) %>% tidyr::nest() %>%
dplyr::mutate(uniq_data = purrr::map(.x = data, .f = function(.x) {
bmx <- slbm::blockmax(.x$Obs, r = blcksz, method = "sliding",
looplastblock = looplastblock)
bmx <- data.frame(slbm = bmx, temp_cvrt = .x$tempcvrt[1:length(bmx)])
bmx <- bmx %>% dplyr::group_by(slbm, temp_cvrt) %>%
dplyr::summarise(n = dplyr::n(), .groups = "drop")
# bmx$n[which.max(bmx$slbm)] <- blcksz
bmx
})) %>% dplyr::ungroup() %>% dplyr::select(-data)
uu <- data %>% dplyr::group_by(Station, Kblockind) %>% tidyr::nest() %>%
dplyr::mutate(full_data = purrr::map(.x = data, .f = function(.x) {
bmx <- slbm::blockmax(.x$Obs, r = blcksz, "sliding", looplastblock = looplastblock)
bmx <- data.frame(slbm = bmx)
bmx}))
uu
uu1 <- uu %>%
dplyr::mutate(uniq_data = purrr::map(full_data,  .f = function(.x) {
bmx <- .x %>% dplyr::group_by(slbm) %>%
dplyr::summarise(n = dplyr::n(), .groups = "drop")
bmx
})) %>% dplyr::ungroup() %>% dplyr::select(-data)
uu1
sluniq_wb <- get_uniq_bm_boot(df.xx, blcksz = blcksz, indexblock = indexblock,
temp_cvrt = NULL, looplastblock = TRUE,
returnfullsamp = TRUE)
data
head(data)
K <- 3
!(nrow(data)/(K*blcksz)  == floor(nrow(data)/(K*blcksz)))
blcksz <- 90
ny <- 50
xx <- evd::rgpd(ny*blcksz, shape = 0.2)
df.xx <- data.frame(Station = "X1", Obs = xx)
k <- 3
ndata <- blcksz * ny
.nKblocks <- ceiling(ndata/(k*blcksz))
indexblock <- data.frame(blockind = c(rep(1:(.nKblocks-1), each = k*blcksz),
rep(.nKblocks, ndata - k*blcksz*(.nKblocks-1))),
obsind = 1:ndata)
sluniq_wb <- get_uniq_bm_boot(df.xx, blcksz = blcksz, indexblock = indexblock,
temp_cvrt = NULL, looplastblock = TRUE,
returnfullsamp = TRUE)
K <- 3
nrow(data)/(K*blcksz)  == floor(nrow(data)/(K*blcksz)))
nrow(data)/(K*blcksz)  == floor(nrow(data)/(K*blcksz))
!(nrow(data)/(K*blcksz)  == floor(nrow(data)/(K*blcksz)))
data()
data
ndat <- nrow(data)
data[(ndat - blcksz + 1):ndat, ]
data[(ndat - blcksz + 1):ndat, ] %>% length()
data[(ndat - blcksz + 1):ndat, ] %>% dim()
dim(data)
data <- data %>% bind_rows(data[(ndat -blcksz +1):ndat,  ])
dim(data)
dim(data)/3
35*90
35*90/3
35/3
m <- ceiling(data/blcksz)
m <- ceiling(ndat/blcksz)
m
mk <- floor(m/K)
mk
diffmk <- m - mk*K
diffmk
mk
mk*k
diffmk <- m - mk*K - K
diffmk
diffmk <- K - m + mk*K
diffmk
data <- data %>% bind_rows(data[(ndat - diffmk*blcksz +1):ndat,  ])
indexblock
head(indexblock)
mk
(ndat - diffmk*blcksz +1):ndat
(ndat - diffmk*blcksz +1):ndat %>% length()
ndat
data
nrow(data)
devtools::load_all()
sluniq_wb <- get_uniq_bm_boot(df.xx, blcksz = blcksz, indexblock = indexblock,
temp_cvrt = NULL, looplastblock = TRUE,
returnfullsamp = TRUE)
ndat <- nrow(data)
ndat
K
K <- 3
ndat/(K*blcksz)  == floor(ndat/(K*blcksz)
)
m <- ceiling(ndat/blcksz)
mk <- floor(m/K)
diffmk <- K - m + mk*K
m
mk
diffmk
data <- data %>% dplyr::bind_rows(data[(ndat - diffmk*blcksz +1):ndat,  ])
indexblock
tail(indexblock)
indexblock <- indexblock %>% dplyr::bind_rows(blockind = rep(mk +1, diffmk*blcksz ), obsind = ndat + (1:(diffmk*blcksz)))
indexblock <- indexblock %>% dplyr::bind_rows(data.frame(blockind = rep(mk +1, diffmk*blcksz ), obsind = ndat + (1:(diffmk*blcksz))))
tail(indexblock)
data$Kblockind <- indexblock$blockind
data$Kblockind
data()
data
data %>% tail()
uu <- data %>% dplyr::group_by(Station, Kblockind) %>% tidyr::nest() %>%
dplyr::mutate(full_data = purrr::map(.x = data, .f = function(.x) {
bmx <- slbm::blockmax(.x$Obs, r = blcksz, "sliding", looplastblock = looplastblock)
bmx <- data.frame(slbm = bmx)
bmx}))
uu
uu1 <- uu %>%
dplyr::mutate(uniq_data = purrr::map(full_data,  .f = function(.x) {
bmx <- .x %>% dplyr::group_by(slbm) %>%
dplyr::summarise(n = dplyr::n(), .groups = "drop")
bmx
})) %>% dplyr::ungroup() %>% dplyr::select(-data)
uu1
uu1[17, ]
uu1[17, ]$uniq_data
sluniq_wb <- get_uniq_bm_boot(df.xx, blcksz = blcksz, indexblock = indexblock,
returnfullsamp = TRUE)
ndat <- nrow(data)
K <- 4
50/4
m <- ceiling(ndat/blcksz)
mk <- floor(m/K)
diffmk <- K - m + mk*K
mk
diffmk
tail(data)
indexblock
indexblock %>% tail()
blcksz <- 90
ny <- 50
xx <- evd::rgpd(ny*blcksz, shape = 0.2)
df.xx <- data.frame(Station = "X1", Obs = xx)
k <- 4
ndata <- blcksz * ny
.nKblocks <- ceiling(ndata/(k*blcksz))
indexblock <- data.frame(blockind = c(rep(1:(.nKblocks-1), each = k*blcksz),
rep(.nKblocks, ndata - k*blcksz*(.nKblocks-1))),
obsind = 1:ndata)
sluniq_wb <- get_uniq_bm_boot(df.xx, blcksz = blcksz, indexblock = indexblock,
temp_cvrt = NULL, looplastblock = TRUE,
returnfullsamp = TRUE)
K <- 4
ndat <- nrow(data)
m <- ceiling(ndat/blcksz)
mk <- floor(m/K)
diffmk <- K - m + mk*K
m
mk
diffmk
tail(indexblock)
data <- data %>% dplyr::bind_rows(data[(ndat - diffmk*blcksz +1):ndat,  ])
indexblock <- indexblock %>% dplyr::bind_rows(blockind = rep(mk +1, diffmk*blcksz ), obsind = ndat + (1:(diffmk*blcksz)))
indexblock <- indexblock %>% dplyr::bind_rows(data.frame(blockind = rep(mk +1, diffmk*blcksz ), obsind = ndat + (1:(diffmk*blcksz))))
tail(indexblock)
data$Kblockind <- indexblock$blockind
uu <- data %>% dplyr::group_by(Station, Kblockind) %>% tidyr::nest() %>%
dplyr::mutate(full_data = purrr::map(.x = data, .f = function(.x) {
bmx <- slbm::blockmax(.x$Obs, r = blcksz, "sliding", looplastblock = looplastblock)
bmx <- data.frame(slbm = bmx)
bmx}))
uu
uu1 <- uu %>%
dplyr::mutate(uniq_data = purrr::map(full_data,  .f = function(.x) {
bmx <- .x %>% dplyr::group_by(slbm) %>%
dplyr::summarise(n = dplyr::n(), .groups = "drop")
bmx
})) %>% dplyr::ungroup() %>% dplyr::select(-data)
uu1
devtools::load_all()
blcksz <- 90
ny <- 50
xx <- evd::rgpd(ny*blcksz, shape = 0.2)
df.xx <- data.frame(Station = "X1", Obs = xx)
k <- 4
ndata <- blcksz * ny
.nKblocks <- ceiling(ndata/(k*blcksz))
indexblock <- data.frame(blockind = c(rep(1:(.nKblocks-1), each = k*blcksz),
rep(.nKblocks, ndata - k*blcksz*(.nKblocks-1))),
obsind = 1:ndata)
sluniq_wb <- get_uniq_bm_boot(df.xx, blcksz = blcksz, K = k, indexblock = indexblock,
temp_cvrt = NULL, looplastblock = TRUE,
returnfullsamp = TRUE)
sluniq_wb
devtools::load_all()
set.seed(1)
blcksz <- 90
xx <- evd::rgpd(100*90, shape = 0.2)
temp_cvrt <- rep(1:100/100, each = blcksz)[1:(99*blcksz + 1)]
bms <- get_uniq_bm(xx, blcksz, temp_cvrt = temp_cvrt, looplastblock = FALSE)
bms
#' fit_gev_univ(data = bms, hessian = TRUE, type = "stationay", return_cov = TRUE,
#' varmeth = "V2", chain = TRUE, orig_slbm = blockmax(xx, 90, "sliding"),
#' orig_cvrt = temp_cvrt, blcksz = 90)
#' fit_gev_univ(data = bms, hessian = TRUE, type = "stationary", return_cov = TRUE,
#' varmeth = "V2", chain = TRUE, orig_slbm = blockmax(xx, 90, "sliding"),
#' orig_cvrt = temp_cvrt, blcksz = 90)
fit_gev_univ(data = bms, hessian = TRUE, type = "stationary", return_cov = TRUE,
varmeth = "V2", chain = TRUE, orig_slbm = blockmax(xx, 90, "sliding"),
orig_cvrt = temp_cvrt, blcksz = 90)
add.args <- list(...)
nsl <- length(orig_slbm)
k <-  nsl /blcksz
k <- ifelse(k == floor(k), k, floor(k))
temp_cvrt_sl <- temp.cov[1:length(orig_slbm)]
score.bdata <- score.fun(orig_slbm, theta =  est_par$mle, temp.cov = temp_cvrt_sl,
type = type, chain = FALSE, rel_trend = add.args$rel_trend)
fishest <- est_par$hessian
fishestinv <- solve(fishest)
fishest
fishestinv
est_par
Y <- (fishestinv %*% score.bdata)
useobs <- k*blcksz
Y
plot.ts(t(Y))
dim(>)
dim(Y)
useobs
Y <- Y[, -8911]
dim(Y)
Yloc <- Y[1, 1:useobs]
Yscale <- Y[2, 1:useobs ]
Yshape <- Y[3, 1:useobs]
matrix(Yshape, nrow = blcksz, ncol = k)
m  <- t(matrix(Yshape, nrow = blcksz, ncol = k))
dim(m)
cm <- cov(m)
cm
dim(cm)
msc  <- t(matrix(Yscale, nrow = blcksz, ncol = k))
cmsc <- cov(msc)
mloc  <- t(matrix(Yloc, nrow = blcksz, ncol = k))
cmloc <- cov(mloc)
cmshsc <- cov(m, msc)
cmshloc <- cov(m, mloc)
cmscloc <- cov(msc, mloc)
# variances. Use AllDiags
v2shape <- 2* mean(as.numeric(lapply(AllDiags(cm), mean)) )/ k
v2scale <- 2* mean(as.numeric(lapply(AllDiags(cmsc), mean)) )/ k
v2loc <- 2* mean(as.numeric(lapply(AllDiags(cmloc), mean)) )/ k
# covariances. Use AllDiags2
v2shsc <- 2* mean(as.numeric(lapply(AllDiags2(cmshsc), mean)) )/ k
v2shloc <- 2* mean(as.numeric(lapply(AllDiags2(cmshloc), mean)) )/ k
v2scloc <- 2* mean(as.numeric(lapply(AllDiags2(cmscloc), mean)) )/ k
V2 <- matrix( c(v2loc, v2scloc, v2shloc,
v2scloc, v2scale, v2shsc,
v2shloc, v2shsc, v2shape),
nrow = 3)
rownames(V2) <- colnames(V2) <- c("loc", "scale", "shape")
V2
dim(Y)
# variances
vshape <- 2*mean(cm[1,]) / k
vscale <-  2*mean(cmsc[1,]) / k
vloc <-  2*mean(cmloc[1,]) / k
# covariances
vshsc <- 2*mean(cmshsc[1,]) / k
vshloc <- 2*mean(cmshloc[1,]) / k
vscloc <- 2*mean(cmscloc[1,]) / k
vscsh <- 2*mean(cmshsc[,1]) / k
vlocsh <- 2*mean(cmshloc[,1]) / k
vlocsc <- 2*mean(cmscloc[,1]) / k
V <- matrix( c(vloc, vscloc, vshloc,
vlocsc, vscale, vshsc,
vlocsc, vscsh, vshape),
nrow = 3)
V <- (V + t(V))/2
rownames(V) <- colnames(V) <- c("loc", "scale", "shape")
V
V2
AA <- matrix(1:24, ncol = 12)
AA
array(AA, dim = c(2,3,4))
array(Y, dim = c(3, 90, 99))
YY <- array(Y, dim = c(3, 90, 99))
dim(YY)
dim(m)
cm
dim(cm)
m  <- t(matrix(Yshape, nrow = blcksz, ncol = k))
cm <- cov(m)
msc  <- t(matrix(Yscale, nrow = blcksz, ncol = k))
cmsc <- cov(msc)
mloc  <- t(matrix(Yloc, nrow = blcksz, ncol = k))
cmloc <- cov(mloc)
cmshsc <- cov(m, msc)
cmshloc <- cov(m, mloc)
cmscloc <- cov(msc, mloc)
dim(cmshsc)
cmshsc[1, 1]
dim(m)
cov(m[, 1], msc[, 1])
cov(m[, 1], msc[, 2])
cmshsc[1, 2]
?cov
dim(cm)
fishest
fishestinv
eigen(fishest)
boot_sl()
boot_sl
sample_boot_sl
est_var_univ
est_var_univ_nochain
devtools::load_all()
set.seed(1)
blcksz <- 90
xx <- evd::rgpd(100*90, shape = 0.2)
temp_cvrt <- rep(1:100/100, each = blcksz)[1:(99*blcksz + 1)]
bms <- get_uniq_bm(xx, blcksz, temp_cvrt = temp_cvrt, looplastblock = FALSE)
bms
fit_gev_univ(data = bms, hessian = TRUE, type = "stationary", return_cov = TRUE,
varmeth = "V2", chain = TRUE, orig_slbm = blockmax(xx, 90, "sliding"),
orig_cvrt = temp_cvrt, blcksz = 90)
mu <- theta[1]
theta
sigma <- theta[2]
xi <- theta[3]
z <- (x-mu)/sigma
z
plot.ts(z)
in_supp <- which( (1+ xi*z) > 0)
in_supp
!in_supp
z[!in_supp] <- NA
anyNA(z)
u <- (1+xi *z)^(-1/xi)
scoreloc <- (xi + 1 - u)/(sigma*(1+xi*z))
scorescale <- ((1-u)*z -1)/(sigma*(1+xi*z))
scoreshape <- (1-u)*z^2/2- z
scoreshape <- (1-u)*1/xi*(1/xi*log(1+xi*z)-z/(1+xi*z)) - z/(1+xi*z)
scoreshape
scoreloc
length(scoreloc)
matrix(c(scoreloc, scorescale, scoreshape),
nrow = 3, byrow = TRUE)
matrix(c(scoreloc, scorescale, scoreshape),
nrow = 3, byrow = TRUE)[ , 1]
matrix(c(scoreloc, scorescale, scoreshape),
nrow = 3, byrow = TRUE) %>% dim()
matrix(c(scoreloc, scorescale, scoreshape),
nrow = 3, byrow = TRUE)[, 1]
scoreloc
matrix(c(scoreloc, scorescale, scoreshape),
nrow = 3, byrow = TRUE)[, 1]
scoreloc[, 1]
scoreloc[ 1]
scorescale[ 1]
scoreshape[ 1]
devtools::load_all()
library(tidyverse)
#' @examples
blcksz <- 90
ny <- 100
xx <-  evd::rgpd(ny*blcksz, shape = -0.2) + 2*rep(1:ny/ny, each = blcksz)
df.xx <- data.frame(Station = "X1", Obs = xx)
k <- 3
ndata <- blcksz * ny
.nKblocks <- ceiling(ndata/(k*blcksz))
indexblock <- data.frame(blockind = c(rep(1:(.nKblocks-1), each = k*blcksz),
rep(.nKblocks, ndata - k*blcksz*(.nKblocks-1))),
obsind = 1:ndata)
sluniq_wb <- get_uniq_bm_boot(df.xx, blcksz = blcksz, K = k, indexblock = indexblock,
temp_cvrt = rep(1:ny/ny, each = blcksz), looplastblock = TRUE,
returnfullsamp = TRUE)
full_slbm <- sluniq_wb %>% dplyr::select(-uniq_data)
sluniq_wb <- sluniq_wb %>% dplyr::select(-full_data)
estim_lo <- slbm::fit_gev_univ(tidyr::unnest(sluniq_wb, cols = uniq_data),
type = "shift", hessian = TRUE)
boot_sl(sluniq = sluniq_wb, slorig = full_slbm, blcksz = blcksz, nKblocks = .nKblocks,
B = 10, type = "shift", ref_gmst = (c(0.8, 0.9)), Tyrl = c(50, 100), start_vals = estim_lo$mle,
scale.link = make.link("identity"), reltol = 1e-09, estimate_RL = TRUE)
boot_estimators
boot_sl(sluniq = sluniq_wb, slorig = full_slbm, blcksz = blcksz, nKblocks = .nKblocks,
B = 10, type = "shift", ref_gmst = (c(0.8, 0.9)), Tyrl = c(50, 100), start_vals = estim_lo$mle,
scale.link = make.link("identity"), reltol = 1e-09, estimate_RL = "both")
B
boot_estimators
boot_sl(sluniq = sluniq_wb, slorig = full_slbm, blcksz = blcksz, nKblocks = .nKblocks,
B = 10, type = "stationary", ref_gmst = (c(0.8, 0.9)), Tyrl = c(50, 100), start_vals = estim_lo$mle,
scale.link = make.link("identity"), reltol = 1e-09, estimate_RL = "both")
boot_estimators
boot_parest_v2 <- purrr::map_dfr(boot_estimators, ~
{ resrl <- dplyr::left_join(.x$rl_boot, .x$rlvarV2,
by = c("Year"))
respars <- dplyr::tibble(
data.frame(t(.x$mle), conv = .x$conv),
CovestV = list(.x$V2))
respars %>% dplyr::bind_cols(resrl) }
)
boot_parest_v2
boot_estimators
boot_estimators[[1]]
boot_estimators[[1]]$mle
boot_parest_v2
boot_estimators[[1]]$rl_boot
boot_sl(sluniq = sluniq_wb, slorig = full_slbm, blcksz = blcksz, nKblocks = .nKblocks,
B = 10, type = "stationary", ref_gmst = 0, Tyrl = c(50, 100), start_vals = estim_lo$mle,
scale.link = make.link("identity"), reltol = 1e-09, estimate_RL = "both")
boot_estimators[[1]]$rl_boot
boot_parest_v2 <- purrr::map_dfr(boot_estimators, ~
{ resrl <- dplyr::left_join(.x$rl_boot, .x$rlvarV2,
by = c("Year"))
respars <- dplyr::tibble(
data.frame(t(.x$mle), conv = .x$conv),
CovestV = list(.x$V2))
respars %>% dplyr::bind_cols(resrl) }
)
boot_parest_v2
boot_estimators[[1]]$rl_boot
boot_estimators[[2]]$rl_boot
boot_estimators[[2]]$mle
boot_estimators[[2]]$rlvarV2
boot_estimators[[10]]$rlvarV2
boot_estimators[[10]]$mle
boot_parest_v2
devtools::load_all()
devtools::document()
devtools::build(vignettes = FALSE)
