?fgev_hom
devtools::document()
?fgev_hom
optim
?fgev_hom
devtools::document()
?fgev_hom
devtools::document()
optim
devtools::document()
?fgev_hom
devtools::document()
?fgev_hom
load_all()
?fgev_hom
library(slbm)
?fgev_hom
fgev_hom(xx)
fgev_hom(z)
fgev_hom(zz)
?dgev_cv_fit
?optim
xx <- sapply( 1:5, function(x) evd::rgev(30, loc = 2*x, scale = x, shape = 0.2))
xx
fgev_hom(xx)
apply(xx, 2, function(x) evd::fgev(x, std.err = FALSE)$estimate)
sta <- apply(xx, 2, function(x) evd::fgev(x, std.err = FALSE)$estimate)
mean(sta[1, ]/sta[2,])
start_st <- apply(xx, 2, function(x) evd::fgev(x, std.err = FALSE)$estimate)
start_vals <- c(mean(start_st[1, ]/start_st[2, ]),
scale.link$linkfun(start_st[2, ]), start_st[3])
start_st <- apply(xx, 2, function(x) evd::fgev(x, std.err = FALSE)$estimate)
start_vals <- c(mean(start_st[1, ]/start_st[2, ]),
(start_st[2, ]), start_st[3])
start_vals
load_all()
fgev_hom(zz)
kk <- fgev_hom(zz)
kk$mle
kk$mle[1,]/kk$mle[2,]
start_st
start_st[3]
mean(start_st[3, ])
document()
?fgev_hom
document()
?fgev_hom
document()
?fgev_hom
document()
?fgev_hom
vv <- tibble(a = 1)
vv
class(aa)
class(vv)
blockmax
RcppRoll::roll_max()
RcppRoll::roll_max
?RcppRoll::roll_max
uu <- 1:20
uu
uu[c(4,7,8,15,19)] <- NA
uu
RcppRoll::roll_max(uu, n = 3)
RcppRoll::roll_max(uu, n = 3, na.rm = TRUE)
zz
bms
bms[1, ]$uniq_data
xx <- sapply(c(0.1, 0.4), function(x) evd::rgpd(10*blcksz, shape = x))
xx
blcksz <- 90
xx <- sapply(c(0.1, 0.4), function(x) evd::rgpd(10*blcksz, shape = x))
xx
yy <- data.frame(xx) %>% pivot_longer( 1:2, names_to = "Station", values_to = "Obs")
yy
temp_cvrt <- rep(1:10/10, each = blcksz)[1:(9*blcksz + 1)]
bms <- get_uniq_bm(yy, blcksz, temp_cvrt = temp_cvrt )
bms
bms[1, ]$uniq_data
yy
yy %>% arrange(Station, desc(Obs))
?fitspatgev
model.frame()
model.frame
?model.frame
prep4spatml( ~ 1, ~ lon + lat, )
prep4spatml( ~ 1, ~ lon + lat, NULL NULL, bms, spatial_cvrt)
prep4spatml( loc.sp.form = ~ 1, scale.sp.form = ~ lon + lat,data =  bms, spat.cov spatial_cvrt)
prep4spatml( loc.sp.form = ~ 1, scale.sp.form = ~ lon + lat,data =  bms, spat.cov= spatial_cvrt)
?model.matrix
bms
bms[1, ]$uniq_data
data = bms, spat.cov = data.frame( lon = c(1,2), lat = c(2,4)))
loc.temp.form = ~ time, data = bms, spat.cov = data.frame( lon = c(1,2), lat = c(2,4)))
loc.temp.form = ~ Time, data = bms, spat.cov = data.frame( lon = c(1,2), lat = c(2,4)))
loc.temp.form = ~ GMST, data = bms, spat.cov = data.frame( lon = c(1,2), lat = c(2,4)))
loc.temp.form = ~ GMST, data = bms, spat.cov = data.frame( lon = c(1,2), lat = c(2,4)))
bms
data.frame( lon = c(1,2), lat = c(2,4))
prep4spatml(loc.sp.form = ~ lon, scale.sp.form = ~ lon +lat,
loc.temp.form = ~ GMST, data = bms, spat.cov = data.frame( lon = c(1,2), lat = c(2,4)))
prep4spatml(loc.sp.form = ~ lon, scale.sp.form = ~ lon +lat,
loc.temp.form = ~ GMST, data = bms, spat.cov = data.frame( lon = c(1,2), lat = c(2,4)))
prep4spatml(loc.sp.form = ~ lon, scale.sp.form = ~ lon +lat,
\}
bms <- get_uniq_bm(yy, blcksz, temp_cvrt = temp_cvrt )
prep4spatml(loc.sp.form = ~ lon, scale.sp.form = ~ lon +lat,
loc.temp.form = ~ GMST, data = bms, spat.cov = data.frame( lon = c(1,2), lat = c(2,4)))
load_all()
load_all()
document()
?get_uniq:bm
?get_uniq_bm
load_all()
document()
?get_uniq_bm
?prep4spatml
document()
?prep4spatml
document()
?prep4spatml
document()
?prep4spatml
document()
?prep4spatml
?IDF::gev.d.lik
?IDF::gev.d.fit
IDF::gev.d.fit
fitspatgev
?fitspatgev
set.seed(3)
ny <- 70
dstat <- 10
ny <- 50
dstat <- 10
x <- seq(0, dstat, length = dstat)
y <- runif(dstat)
spatial_cvrt <- data.frame(lat  = x, lon = y, ele = runif(dstat))
### smoothed GMST anomaly covariate
temp_cvrt <- BMRLest::Covariate
temp_cvrt
coords <- cbind(spatial_cvrt$lat, spatial_cvrt$lon)
colnames(coords ) <- c("lat", "lon")
blcksz <- 90
pardat <- MDAdata(ny*blcksz, locations = coords, margins = list(distr = "Pareto", shape = 0.1),
ms = list(kovmod = "whitmat", nugget = 0, range = 3, smooth = 0.44))
xx <- gev_struc(pardat, n.years = ny, covariates = list(spatial = spatial_cvrt,
temporal = temp_cvrt),
spatial.pars = list(loc = list( lon = 0.4, lat = 0, alt = -0.05, lon2= 0, lat2 = 0, alt2= 0),
scale = list()),
temp.pars = list(loc = list( GMST  = 0.5, time = 0),
scale = list()),
determ.pars = list(loc = 25, scale = 1.5))
set.seed(3)
ny <- 40
dstat <- 8
x <- seq(0, dstat, length = dstat)
y <- runif(dstat)
spatial_cvrt <- data.frame(lat  = x, lon = y, ele = runif(dstat))
### smoothed GMST anomaly covariate
temp_cvrt <- BMRLest::Covariate
temp_cvrt
coords <- cbind(spatial_cvrt$lat, spatial_cvrt$lon)
colnames(coords ) <- c("lat", "lon")
blcksz <- 1
blcksz <- 90
MMsc <- model.matrix( ~ lon + lat, model.frame( ~ lon + lat,
data = spatial_cvrt, na.action = na.pass))
scale_param <- as.numeric(exp(MMsc %*% c(0.4, 0.3, 0.2)))
loc_param <- 2*scale_param
x_star <- SpatialExtremes::rmaxstab(ny*blcksz,
coord = coords, cov.mod = "whitmat", nugget = 0,
range = 3, smooth = 0.5)
x_star
for (i in 1:dstat){
x_star[,i] <- SpatialExtremes::frech2gev(x_star[,i],
loc = loc_param[i], scale = scale_param[i],
shape =  0.2)
}
plot.ts(x_star)
x_star
yy <- data.frame(x_star) %>% pivot_longer( 1:all_of(dstat), names_to = "Station", values_to = "Obs")
yy
x_star
colnames(x_star) <- paste0("Station", 1:8)
example_data <- x_star
rm(example_data)
ExampleData <- x_star
ExampleData
?usethis::use_data()
usethis::use_data(ExampleData)
dim(ExampleData)
### smoothed GMST anomaly covariate
temp_cvrt <- BMRLest::Covariate
temp_cvrt
x <- seq(0, dstat, length = dstat)  # latitude
y <- runif(dstat)                   # longitude
plot(c(x,y))
x
y
plot(x,y)
temp_cvrt
`GLB.Ts+dSST.(3)` <- read.csv("C:/Users/leaz9/Downloads/GLB.Ts+dSST (3).csv")
View(`GLB.Ts+dSST.(3)`)
GMST <- `GLB.Ts+dSST.(3)`$J.D
GMST
GMST <- `GLB.Ts+dSST.(3)` %>% select(Year, J.D)
GMST
as.numeric(GMST$J.D)
GMST$J.D <- as.numeric(GMST$J.D)
GMST
smoothedGMST <- RcppRoll::roll_mean(GMST$J.D, n = 4)
smoothedGMST
GMST
GMST %>% bind_cols(smoothedGMST)
plot.ts(GMST$J.D)
smoothedGMST <- RcppRoll::roll_mean(GMST$J.D, n = 4, align = "center")
lines(smoothedGMST)
lines(smoothedGMST, col = 2)
length(smoothedGMST)
smoothedGMST[1]
smoothedGMST[1:2]
GMST$J.D[1:10]
mean(GMST$J.D[1:4])
mean(GMST$J.D[2:5])
identical(RcppRoll::roll_mean(GMST$J.D, n = 4, align = "center"), RcppRoll::roll_mean(GMST$J.D, n = 4))
mean(GMST$J.D[140:143])
mean(GMST$J.D[139:142])
smoothedGMST[139:140]
smoothedGMST[140:143]
RcppRoll::roll_mean(GMST$J.D[137:143])
RcppRoll::roll_mean(GMST$J.D[137:143], n = 4)
smoothedGMST[140:143] <- RcppRoll::roll_mean(GMST$J.D[137:143], n = 4)
GMST %>% bind_cols(smoothedGMST = smoothedGMST)
GMST <- GMST %>% bind_cols(smoothedGMST = smoothedGMST)
plot.ts(GMST$J.D)
lines(GMST$smoothedGMST, col = 2)
rename(GMST, "annualGMST" = "J.D")
GMST <- rename(GMST, "annualGMST" = "J.D")
usethis::use_data(GMST)
data("GMST")
rm(GMST)
GMST
data("GMST")
GMST
ExampleData
document()
document()
?nll_spat_temp_sl_prp
?nll_spat_temp_sl_prep
?ExampleData
??ExampleData
ExampleData
?ExampleData
usethis::use_data(ExampleData)
usethis::use_data(ExampleData, overwrite = TRUE)
document()
?ExampleData
?slbm::ExampleData
document()
?ExampleData
document()
?ExampleData
set.seed(3)
ny <- 40        # number of  where blocks of size 90 were observed
dstat <- 8      # number of stations
x <- seq(0, dstat, length = dstat)  # latitude
y <- runif(dstat)                   # longitude
spatial_cvrt <- data.frame(lat  = x, lon = y, ele = runif(dstat)) # spatial covariate s
## smoothed GMST anomaly covariate
data("GMST")
temp_cvrt <- rep(GMST$smoothedGMST, each = 90)
coords <- cbind(spatial_cvrt$lat, spatial_cvrt$lon)
colnames(coords ) <- c("lat", "lon")
MMsc <- model.matrix( ~ lon + lat, model.frame( ~ lon + lat,
data = spatial_cvrt, na.action = na.pass))
scale_param <- as.numeric(exp(MMsc %*% c(0.4, 0.3, 0.2)))
loc_param <- 2*scale_param
exdat <- SpatialExtremes::rmaxstab(ny*blcksz,
coord = coords, cov.mod = "whitmat", nugget = 0,
range = 3, smooth = 0.5)
for (i in 1:dstat){
exdat[,i] <- SpatialExtremes::frech2gev(x_star[,i],
loc = loc_param[i], scale = scale_param[i],
shape =  0.2)
}
plot(exdat)
plot.ts(exdat)
exdat
colnames(exdat) <- paste0("Station", 1:8)
exdat
exdat %>% head(9)
ExampleData <- exdat
usethis::use_data(ExampleData, overwrite = TRUE)
document()
?GMST
document()
?GMST
loc_param
dim(ExampleData)
matrix(rep(loc_param, each = 90*40), ncol = 8)
1.5*matrix(rep(temp_cvrt, 8), ncol = 8))
1.5*matrix(rep(temp_cvrt, 8), ncol = 8)
set.seed(3)
ny <- 40        # number of  where blocks of size 90 were observed
dstat <- 8      # number of stations
x <- seq(0, dstat, length = dstat)  # latitude
y <- runif(dstat)                   # longitude
spatial_cvrt <- data.frame(lat  = x, lon = y, ele = runif(dstat)) # spatial covariate s
## smoothed GMST anomaly covariate
data("GMST")
temp_cvrt <- rep(GMST$smoothedGMST, each = 90)
coords <- cbind(spatial_cvrt$lat, spatial_cvrt$lon)
colnames(coords ) <- c("lat", "lon")
MMsc <- model.matrix( ~ lon + lat, model.frame( ~ lon + lat,
data = spatial_cvrt, na.action = na.pass))
scale_param <- as.numeric(exp(MMsc %*% c(0.4, 0.3, 0.2)))
loc_param <- 2*scale_param
loc_param <- matrix(rep(loc_param, each = 90*40), ncol = 8) +
1.5*matrix(rep(temp_cvrt, 8), ncol = 8)
temp_cvrt
2019 - 44+1
2019 - 40+1
2019-1980+1
GMST1 <- GMST %>% dplyr::filter(Year %in% 1980:2019)
temp_cvrt <- rep(GMST1$smoothedGMST[], each = 90)
coords <- cbind(spatial_cvrt$lat, spatial_cvrt$lon)
colnames(coords ) <- c("lat", "lon")
MMsc <- model.matrix( ~ lon + lat, model.frame( ~ lon + lat,
data = spatial_cvrt, na.action = na.pass))
scale_param <- as.numeric(exp(MMsc %*% c(0.4, 0.3, 0.2)))
loc_param <- 2*scale_param
loc_param <- matrix(rep(loc_param, each = 90*40), ncol = 8) +
1.5*matrix(rep(temp_cvrt, 8), ncol = 8)
exdat <- SpatialExtremes::rmaxstab(ny*blcksz,
coord = coords, cov.mod = "whitmat", nugget = 0,
range = 3, smooth = 0.5)
# transform margins to GEV-distributions
for (i in 1:dstat){
for( n in 1:90*40){
exdat[,i] <- SpatialExtremes::frech2gev(exdat[n,i],
loc = loc_param[n,i],
scale = scale_param[i],
shape =  0.2)
}
}
plot.ts(exdat)
ExampleData
exdat
set.seed(3)
ny <- 40        # number of  where blocks of size 90 were observed
dstat <- 8      # number of stations
x <- seq(0, dstat, length = dstat)  # latitude
y <- runif(dstat)                   # longitude
spatial_cvrt <- data.frame(lat  = x, lon = y, ele = runif(dstat)) # spatial covariate s
## smoothed GMST anomaly covariate
data("GMST")
GMST1 <- GMST %>% dplyr::filter(Year %in% 1980:2019)
temp_cvrt <- rep(GMST1$smoothedGMST[], each = 90)
coords <- cbind(spatial_cvrt$lat, spatial_cvrt$lon)
colnames(coords ) <- c("lat", "lon")
MMsc <- model.matrix( ~ lon + lat, model.frame( ~ lon + lat,
data = spatial_cvrt, na.action = na.pass))
scale_param <- as.numeric(exp(MMsc %*% c(0.4, 0.3, 0.2)))
loc_param <- 2*scale_param
loc_param <- matrix(rep(loc_param, each = 90*40), ncol = 8) +
1.5*matrix(rep(temp_cvrt, 8), ncol = 8)
exdat <- SpatialExtremes::rmaxstab(ny*blcksz,
coord = coords, cov.mod = "whitmat", nugget = 0,
range = 3, smooth = 0.5)
# transform margins to GEV-distributions
for (i in 1:dstat){
for( n in 1:90*40){
exdat[n,i] <- SpatialExtremes::frech2gev(exdat[n,i],
loc = loc_param[n,i],
scale = scale_param[i],
shape =  0.2)
}
}
plot.ts(exdat)
plot.ts(exdat[, 1])
colnames(exdat) <- paste0("Station", 1:8)
ExampleData <- exdat
usethis::use_data(ExampleData, overwrite = TRUE)
ExampleData
ExampleData %>% plot.ts()
fitspatgev(ExampleData, covariables = spatial_cvrt, loc.form = ~ lon + lat + ele, scale.form = ~ lon + lat + ele, temp.form.loc = ~ GMST, temp.cov = ~ as.matrix(GMST1))
fitspatgev(apply(ExampleData,2 , blockmax, r = 90, "disjoint"),  covariables = spatial_cvrt, loc.form = ~ lon + lat + ele, scale.form = ~ lon + lat + ele, temp.form.loc = ~ GMST, temp.cov = ~ as.matrix(GMST1))
apply(ExampleData,2 , blockmax, r = 90, "disjoint")
GMST1
fitspatgev(apply(ExampleData,2 , blockmax, r = 90, "disjoint"),  covariables = spatial_cvrt, loc.form = ~ lon + lat + ele, scale.form = ~ lon + lat + ele, temp.form.loc = ~ GMST, temp.cov = ~ as.matrix(GMST1$smoothedGMST))
fitspatgev(apply(ExampleData,2 , blockmax, r = 90, "disjoint"),  covariables = spatial_cvrt, loc.form = ~ lon + lat + ele, scale.form = ~ lon + lat + ele, temp.form.loc = ~ GMST, temp.cov =  as.matrix(GMST1$smoothedGMST))
fitspatgev(apply(ExampleData,2 , blockmax, r = 90, "disjoint"),  covariables = spatial_cvrt, loc.form = ~ lon + lat + ele, scale.form = ~ lon + lat + ele, shape.form = ~1, temp.form.loc = ~ GMST, temp.cov =  as.matrix(GMST1$smoothedGMST))
as.matrix(GMST1$smoothedGMST)
as.matrix(c("GMST"  = GMST1$smoothedGMST))
"GMST" = as.matrix(GMST1$smoothedGMST)
"GMST"
GMST
tempcv <- GMST %>% dplyr::filter(Year %in% c(1980:2019)) %>% dplyr::select(smoothedGMST) 4
tempcv <- GMST %>% dplyr::filter(Year %in% c(1980:2019)) %>% dplyr::select(smoothedGMST)
data("GMST")
tempcv <- GMST %>% dplyr::filter(Year %in% c(1980:2019)) %>% dplyr::select(smoothedGMST)
tempcv
rep(tempcv, each = 90)
tempcv <- rep(tempcv$smoothedGMST, each = 90)[1:(39*90 +1)]
tempcv
tempcv <- as.matrix(tempcv)
colnames(tempcv) <- "GMST"
tempcv <- GMST %>% dplyr::filter(Year %in% c(1980:2019))
tempcv <- as.matrix(tempcv)
colnames(tempcv) <- "GMST"
tempcv <- GMST %>% dplyr::filter(Year %in% c(1980:2019))
tempcv <- rep(tempcv$smoothedGMST, each = 90)[1:(39*90 +1)]
data("GMST")
tempcv <- GMST %>% dplyr::filter(Year %in% c(1980:2019))
tempcv <- as.matrix(tempcv$smoothedGMST)
colnames(tempcv) <- "GMST"
fitspatgev(apply(ExampleData, 2, blockmax, r = 90, "disjoint" ))
fitspatgev(apply(ExampleData, 2, blockmax, r = 90, "disjoint" ), scale.form = ~ lon + lat + ele, loc.form = ~lon + lat + ele, shape.form =  ~1 , temp.cov = tempcv, covariables = spatial_cvrt, temp.form.loc = ~ GMST)
fitspatgev(apply(ExampleData, 2, blockmax, r = 90, "disjoint" ), scale.form = ~ lon + lat + ele, loc.form = ~lon + lat + ele, shape.form =  ~1 , temp.cov = tempcv, covariables = as.matrix(spatial_cvrt), temp.form.loc = ~ GMST)
fitspatgev(apply(ExampleData, 2, blockmax, r = 90, "disjoint" ), scale.form = ~ lon + lat + ele, loc.form = ~lon + lat + ele, shape.form =  ~1 , temp.cov = tempcv, covariables = as.matrix(spatial_cvrt), temp.form.loc = ~ GMST)$fitted.values
plot.ts(apply(ExampleData, 2, blockmax, r = 90, "disjoint" ))
scale_param
scale_param <- as.numeric(exp(MMsc %*% c(0.4, 0.3, 0.2)))
scale_param
loc_param
loc_param %>% summary(9)
"scale1" = -50, "scale2" = 5, "scale3" = -60, "shape" = 0.4, "TempLoc1" = -5 )
params  <- c("loc0" = 100, "loc1" = -10, "loc2" = 4, "loc3" = -40, "scale0" = 120,
"scale1" = -50, "scale2" = 5, "scale3" = -60, "shape" = 0.4, "TempLoc1" = -5 )
params
params  <- c("loc0" = 100, "loc1" = -10, "loc2" = 4, "loc3" = -40, "scale0" = 120,
"scale1" = -50, "scale2" = 5, "scale3" = -60, "shape" = 0.4, "tempLoc1" = -5 )
yy <- ExampleData %>% tidyr::pivot_longer( 1:2, names_to = "Station", values_to = "Obs")
yy <- data.frame(ExampleData) %>% tidyr::pivot_longer( 1:2, names_to = "Station", values_to = "Obs")
yy
yy <- data.frame(ExampleData) %>% tidyr::pivot_longer( 1:8, names_to = "Station", values_to = "Obs")
yy
bms <- get_uniq_bm(yy, 90, temp_cvrt = tempcv)
tempcv
data("ExampleData")
data("GMST")
tempcv <- GMST %>% dplyr::filter(Year %in% c(1980:2019))
tempcv <- rep(tempcv$smoothedGMST, each = 90)[1:(39*90 +1)]
tempcv <- data.frame(GMST = tempcv)
yy <- data.frame(ExampleData) %>% tidyr::pivot_longer( 1:8, names_to = "Station", values_to = "Obs")
##############################
bms <- get_uniq_bm(yy, 90, temp_cvrt = tempcv)
bms
tempcv
get_uniq_bm
temp_cvrt
rm(temp_cvrt)
yy <- data.frame(ExampleData) %>% tidyr::pivot_longer( 1:8, names_to = "Station", values_to = "Obs")
##############################
#' bms <- get_uniq_bm(yy, 90, temp_cvrt = tempcv)
bms <- get_uniq_bm(yy, 90, temp_cvrt = tempcv)
yy
tempcv
head(tempcv)
get_uniq_bm
bms <- get_uniq_bm(yy, 90, temp_cvrt = tempcv$GMST)
bms
loc.temp.form = ~ GMST, data = bms, spat.cov = spatial_cvrt)
prepdata <- prep4spatml(loc.sp.form = ~ lon + lat + ele,
scale.sp.form = ~ lon +lat + ele,
loc.temp.form = ~ GMST, data = bms, spat.cov = spatial_cvrt)
prepdata
params  <- c("loc0" = 100, "loc1" = -10, "loc2" = 4, "loc3" = -40, "scale0" = 120,
"scale1" = -50, "scale2" = 5, "scale3" = -60, "shape" = 0.4, "tempLoc1" = -5 )
nll_spat_temp_sl_prep(params = params, loc.sp.form = ~ lon + lat + ele,
scale.sp.form = ~ lon + lat + ele, loc.temp.form = ~ GMST,
dataprep = prepdata, spat.cov = spatial_cvrt)
data("ExampleData")
data("GMST")
yy <- data.frame(ExampleData) %>%
tidyr::pivot_longer( 1:8, names_to = "Station", values_to = "Obs")
##############################
bms <- get_uniq_bm(yy, 90)
prepdata <- prep4spatml(loc.sp.form = ~ lon + lat + ele,
scale.sp.form = ~ lon +lat + ele, data = bms, spat.cov = spatial_cvrt)
"scale1" = -50, "scale2" = 5, "scale3" = -60, "shape" = 0.4)
params  <- c("disp" = 2, "scale0" = 120,
"scale1" = -50, "scale2" = 5, "scale3" = -60, "shape" = 0.4)
nll_spat_temp_sl_hom(params = params,
scale.sp.form = ~ lon + lat + ele, loc.temp.form = ~ GMST,
dataprep = prepdata, spat.cov = spatial_cvrt)
nll_spat_temp_sl_hom(params = params,
scale.sp.form = ~ lon + lat + ele,
dataprep = prepdata, spat.cov = spatial_cvrt)
document()
document()
document()
?fit_gev_cv_qs
?nll_spat_temp_sl_prep
?nll_spat_temp_sl_hom
fitspatgev
?modeldef
fit_spgev_sl
seq(0, dstat, length = dstat)
data("ExampleData")
djbm <- apply(ExampleData, 2, blockmax, r = 90, "disjoint")
set.seed(3)
spatial_cvrt <- data.frame(lat  = seq(0, dstat, length = dstat),
lon = runif(8), ele = runif(8))
get_start_vals(djbm, loc.sp.form = ~ lon + lat + ele, scale.sp.form = lon + lat,
spat.cov = spatial_cvrt )
spatial_cvrt
get_start_vals(djbm, loc.sp.form = ~ lon + lat + ele, scale.sp.form = ~ lon + lat,
spat.cov = spatial_cvrt )
get_start_vals(djbm, loc.sp.form = ~ lon + lat + ele, scale.sp.form = ~ lon + lat,
spat.cov = spatial_cvrt, method = "LeastSq")
