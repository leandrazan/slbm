nll_spat_temp_sl_prep <- function(params, loc.sp.form, scale.sp.form,
loc.temp.form = NULL, scale.temp.form = NULL,
dataprep, spat.cov, scale.link = make.link("log")){
params.sp <- list(loc = params[startsWith(names(params),"loc")],
scale = params[startsWith(names(params),"scale")],
shape = params[startsWith(names(params),"shape")])
params.temp <- list(loc = params[startsWith(names(params),"tempLoc")],
scale = params[startsWith(names(params),"tempScale")])
params.temp <- purrr::map(params.temp, function(.x) ifelse(length(.x) == 0, 0, .x) )
model.loc.sp <- dataprep$MatLocSp
model.scale.sp <- dataprep$MatScaleSp
loc_sp <- data.frame(loc_sp = model.loc.sp %*% params.sp$loc)
scale_sp <-  data.frame(scale_sp = model.scale.sp %*% params.sp$scale)
dataprep1 <- dataprep$data
dataprep1 <- dataprep1 %>% dplyr::bind_cols( loc_sp , scale_sp )
if(!is.null(loc.temp.form)) {
loc.temp.form <- update(loc.temp.form,  ~ . + 0)
dataprep1 <- dataprep1 %>%
dplyr::mutate(LocTemp =  purrr::map(MatLocTemp,
~ as.numeric( .x %*% params.temp$loc) )
) %>%
dplyr::select( - MatLocTemp)
locpars <- purrr::map2(.x = dataprep1$LocTemp, .y = dataprep1$loc_sp, ~ .x + .y)
} else {
locpars <- dataprep1$loc_sp
}
if(!is.null(scale.temp.form)) {
scale.temp.form <- update(scale.temp.form,  ~ . + 0)
dataprep1 <- dataprep1 %>%
dplyr::mutate(ScaleTemp =  purrr::map(MatScaleTemp,
~ as.numeric( .x %*% params.temp$scale) )
) %>%
dplyr::select( - MatScaleTemp)
scalepars <- purrr::map2(.x = dataprep1$ScaleTemp, .y = dataprep1$scale_sp, ~ .x + .y)
} else {
scalepars <- dataprep1$scale_sp
}
yy <- purrr::map(dataprep1$uniq_data, ~ .x$slbm)
link.scalepars <- scale.link$linkinv(scalepars)
if(abs(params.sp$shape ) < 1e-8) {
yy <-  purrr::pmap(list(.x = yy, .y = locpars, .z = link.scalepars),
function(.x, .y, .z) {
max(exp(- (.x - .y)/.z), 0)
} )
} else {
yy <- purrr::pmap(list(.x = yy, .y = locpars, .z = link.scalepars),
function(.x, .y, .z) {
max((1 + params.sp$shape*( (.x - .y)/.z))^(-1/params.sp$shape), 0.00001)
})
}
stopyn <-  any(unlist(link.scalepars )<= 0)
if(stopyn) {
return( 1e+10)
} else {
yy <- purrr::pmap( list(.x = yy, .y = link.scalepars , .z = dataprep1$uniq_data),
.f = function(.x, .y, .z) {
u <- (log(.y) - (params.sp$shape +1)*log(.x) + .x)
u*.z$n
}
)
sum(unlist(yy), na.rm = TRUE)
}
}
load_all()
rm(list = c("nll_spat_temp_sl_prep"))
load_all()
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ lon + lat,
scale.sp.form = ~ lon +lat,
loc.temp.form = ~ GMST, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSqTemp",
temp.cov = tempcv$smoothedGMST)
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ lon,
scale.sp.form = ~ lon ,
loc.temp.form = ~ GMST,
spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSqTemp",
temp.cov = tempcv$smoothedGMST,
scale.link = make.link("identity"))
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ lon + lat,
scale.sp.form = ~ lon +lat, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSqTemp",
temp.cov = tempcv$smoothedGMST)
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ lon + lat,
scale.sp.form = ~ lon +lat, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSq")
evd::dgev
aa <- list( a = c(1,24), b = 1:10)
aa
anyNA(aa)
map(aa, anyNA())
map(aa, ~ anyNA(.x))
purrr::map(aa, ~ anyNA(.x))
any(purrr::map(aa, ~ anyNA(.x)))
any(unlist(purrr::map(aa, ~ anyNA(.x))))
(unlist(purrr::map(aa, ~ anyNA(.x))))
library(devtools)
load_all()
#' data("ExampleData")
data("ExampleData")
data("GMST")
tempcv <- GMST %>% dplyr::filter(Year %in% c(1980:2019))
tempcvsl <- rep(tempcv$smoothedGMST, each = 90)[1:(39*90 +1)]
tempcvsl <- data.frame(GMST = tempcvsl)
set.seed(3)
spatial_cvrt <- data.frame(lat  = seq(0, 8, length = 8),
lon = runif(8), ele = runif(8))
yy <- data.frame(ExampleData) %>%
tidyr::pivot_longer( 1:8, names_to = "Station", values_to = "Obs")
##############################
bmuniq <- get_uniq_bm(yy, 90, temp_cvrt = tempcvsl$GMST)
library(tidyverse)
yy <- data.frame(ExampleData) %>%
tidyr::pivot_longer( 1:8, names_to = "Station", values_to = "Obs")
bmuniq <- get_uniq_bm(yy, 90, temp_cvrt = tempcvsl$GMST)
djbm <- apply(ExampleData, 2, blockmax, r = 90, "disjoint")
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ lon + lat,
scale.sp.form = ~ lon +lat,
loc.temp.form = ~ GMST, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSqTemp",
temp.cov = tempcv$smoothedGMST)
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ lon ,
scale.sp.form = ~ lon +lat,
loc.temp.form = ~ GMST, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSqTemp",
temp.cov = tempcv$smoothedGMST)
bmuniq
bmuniq$uniq_data
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ lon ,
scale.sp.form = ~ lon,
loc.temp.form = ~ GMST, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSqTemp",
temp.cov = tempcv$smoothedGMST)
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ 1,
scale.sp.form = ~ 1,
loc.temp.form = ~ GMST, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSqTemp",
temp.cov = tempcv$smoothedGMST)
?optim
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ 1,
scale.sp.form = ~ 1,
loc.temp.form = ~ GMST, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSqTemp",
temp.cov = tempcv$smoothedGMST, REPORT = 1, trace = 1)
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ 1,
scale.sp.form = ~ 1,
loc.temp.form = ~ GMST, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSqTemp",
temp.cov = tempcv$smoothedGMST, REPORT = 1, trace = 3)
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ 1,
scale.sp.form = ~ 1,
loc.temp.form = ~ GMST, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSqTemp",
temp.cov = tempcv$smoothedGMST, REPORT = 1, trace = 10)
optim
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ 1,
scale.sp.form = ~ 1,
loc.temp.form = ~ GMST, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSqTemp",
temp.cov = tempcv$smoothedGMST, method = "Nelder-Mead", REPORT = 1, trace = 10)
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ 1,
scale.sp.form = ~ 1,
loc.temp.form = ~ GMST, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSqTemp", scale.link = make.link("identity"),
temp.cov = tempcv$smoothedGMST, method = "Nelder-Mead", REPORT = 1, trace = 10)
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ 1,
scale.sp.form = ~ 1,
loc.temp.form = ~ GMST, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSqTemp", scale.link = make.link("identity"),
temp.cov = tempcv$smoothedGMST, REPORT = 1, trace = 10)
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ 1,
scale.sp.form = ~ 1, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSq", scale.link = make.link("identity"),
temp.cov = tempcv$smoothedGMST, REPORT = 1, trace = 10)
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ 1,
scale.sp.form = ~ 1, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSq", scale.link = make.link("identity"),
temp.cov = tempcv$smoothedGMST, REPORT = 1, trace = 100)
xx <- seq(-5, 10, length.out = 1000)
plot(xx, evd::dgev(xx))
evd::dgev(xx)
plot(xx, evd::dgev(xx, shape = 0.2))
evd::dgev(xx, shape = 0.2)
evd::dgev(xx, shape = 0.2, loc = 5)
plot(xx, evd::dgev(xx, shape = 0.2, loc = 5))
plot(xx, evd::dgev(xx, shape = 0.2, scale =  = 5))
plot(xx, evd::dgev(xx, shape = 0.2, scale =  5))
yy <- seq(-30, 20, length.out = 10000)
plot(yy, evd::dgev(yy, shape = 0.2, scale =  5))
-5/0.2
yy <- seq(-25, 20, length.out = 10000)
yy <- seq(-25, 25, length.out = 10000)
plot(yy, evd::dgev(yy, shape = 0.2, scale =  5))
evd::dgev(yy, shape = 0.2, scale =  5)
plot(yy, evd::pgev(yy, shape = 0.2, scale =  5))
evd::dgev
plot(yy, evd::pgev(yy, shape = 0.2, scale =  5, loc  = 0))
yy
yy <- seq(-25, 25, length.out = 1000)
plot(yy, evd::pgev(yy, shape = 0.2, scale =  5, loc  = 0))
evd::dgev
evd::pgev
evd::pgev(-20, scale = 5, shape = 0.2, loc = 0)
exp(-(1+0.2*(-20)/5)^(-1/0.2))
-(1+0.2*(-20)/5)^(-1/0.2)
exp(-2000)
exp(-1000)
identical(exp(-1000), 0)
identical(exp(-400), 0)
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ 1,
scale.sp.form = ~ 1, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSq", scale.link = make.link("identity"),
temp.cov = tempcv$smoothedGMST, REPORT = 1, trace = 100)
bmuniq
bmuniq[1, ]$uniq_data
bmuniq[1, ]$uniq_data[[1]]$slbm
uu <- bmuniq[1, ]$uniq_data[[1]]$slbm
evd::dgev(uu, loc = -1500.952 , scale =  2259.228, shape =  -2948.198
)
#'
#' params  <- c("loc0" = 18, "loc1" = -1, "loc2" = 0.4, "loc3" = 0.02, "scale0" =0.2,
#'                "scale1" = 0.1, "scale2" = 0.1, "shape" = 0.3, "tempLoc1" = 1)
#'
#' nll_spat_temp_sl_prep(params = params, loc.sp.form = ~ lon + lat + ele,
#'           scale.sp.form = ~ lon + lat, loc.temp.form = ~ GMST,
#'           dataprep = prepdata, spat.cov = spatial_cvrt,
#'           scale.link = make.link("log"))
#' @importFrom stats lm model.frame model.matrix na.pass reformulate update
#'
nll_spat_temp_sl_prep <- function(params, loc.sp.form, scale.sp.form,
loc.temp.form = NULL, scale.temp.form = NULL,
dataprep, spat.cov, scale.link = make.link("log")){
browser()
params.sp <- list(loc = params[startsWith(names(params),"loc")],
scale = params[startsWith(names(params),"scale")],
shape = params[startsWith(names(params),"shape")])
params.temp <- list(loc = params[startsWith(names(params),"tempLoc")],
scale = params[startsWith(names(params),"tempScale")])
params.temp <- purrr::map(params.temp, function(.x) ifelse(length(.x) == 0, 0, .x) )
model.loc.sp <- dataprep$MatLocSp
model.scale.sp <- dataprep$MatScaleSp
loc_sp <- data.frame(loc_sp = model.loc.sp %*% params.sp$loc)
scale_sp <-  data.frame(scale_sp = model.scale.sp %*% params.sp$scale)
dataprep1 <- dataprep$data
dataprep1 <- dataprep1 %>% dplyr::bind_cols( loc_sp , scale_sp )
if(!is.null(loc.temp.form)) {
loc.temp.form <- update(loc.temp.form,  ~ . + 0)
dataprep1 <- dataprep1 %>%
dplyr::mutate(LocTemp =  purrr::map(MatLocTemp,
~ as.numeric( .x %*% params.temp$loc) )
) %>%
dplyr::select( - MatLocTemp)
locpars <- purrr::map2(.x = dataprep1$LocTemp, .y = dataprep1$loc_sp, ~ .x + .y)
} else {
locpars <- dataprep1$loc_sp
}
if(!is.null(scale.temp.form)) {
scale.temp.form <- update(scale.temp.form,  ~ . + 0)
dataprep1 <- dataprep1 %>%
dplyr::mutate(ScaleTemp =  purrr::map(MatScaleTemp,
~ as.numeric( .x %*% params.temp$scale) )
) %>%
dplyr::select( - MatScaleTemp)
scalepars <- purrr::map2(.x = dataprep1$ScaleTemp, .y = dataprep1$scale_sp, ~ .x + .y)
} else {
scalepars <- dataprep1$scale_sp
}
yy <- purrr::map(dataprep1$uniq_data, ~ .x$slbm)
link.scalepars <- scale.link$linkinv(scalepars)
if(abs(params.sp$shape ) < 1e-8) {
yy <-  purrr::pmap(list(.x = yy, .y = locpars, .z = link.scalepars),
function(.x, .y, .z) {
exp(- (.x - .y)/.z)
} )
} else {
yy <- purrr::pmap(list(.x = yy, .y = locpars, .z = link.scalepars),
function(.x, .y, .z) {
(1 + params.sp$shape*( (.x - .y)/.z))^(-1/params.sp$shape)
})
}
stopyn <-  (any(unlist(purrr::map(yy, ~ any(.x < 0, na.rm = TRUE)))) |
any(unlist(link.scalepars ) <= 0))
if(stopyn) {
return( 1e+10)
} else {
yy <- purrr::pmap( list(.x = yy, .y = link.scalepars , .z = dataprep1$uniq_data),
.f = function(.x, .y, .z) {
u <- (log(.y) - (params.sp$shape +1)*log(.x) + .x)
u*.z$n
}
)
sum(unlist(yy), na.rm = TRUE)
}
}
nll_spat_temp_sl_prep <- function(params = c(loc = -1500.952 , scale =  2259.228, shape =  -2948.198), loc.sp.form = ~1, scale.sp.form = ~1,
loc.temp.form = NULL, scale.temp.form = NULL,
dataprep = prep4spatml( loc.sp.form = ~1, scale.sp.form = ~1, data = uu), spat.cov = data.frame(lon = 1), scale.link = make.link("log"))
)
nll_spat_temp_sl_prep(params = c(loc = -1500.952 , scale =  2259.228, shape =  -2948.198), loc.sp.form = ~1, scale.sp.form = ~1,
loc.temp.form = NULL, scale.temp.form = NULL,
dataprep = prep4spatml( loc.sp.form = ~1, scale.sp.form = ~1, data = uu), spat.cov = data.frame(lon = 1), scale.link = make.link("log"))
params.sp <- list(loc = params[startsWith(names(params),"loc")],
scale = params[startsWith(names(params),"scale")],
shape = params[startsWith(names(params),"shape")])
params.sp
params.temp <- list(loc = params[startsWith(names(params),"tempLoc")],
scale = params[startsWith(names(params),"tempScale")])
params.temp <- purrr::map(params.temp, function(.x) ifelse(length(.x) == 0, 0, .x) )
dataprep$MatLocSp
model.scale.sp <- dataprep$MatScaleSp
dataprep$MatScaleSp
dataprep
loc_sp <- data.frame(loc_sp = model.loc.sp %*% params.sp$loc)
model.loc.sp <- dataprep$MatLocSp
model.scale.sp <- dataprep$MatScaleSp
loc_sp <- data.frame(loc_sp = model.loc.sp %*% params.sp$loc)
loc_sp
nll_spat_temp_sl_prep(params = c(loc = -1500.952 , scale =  2259.228, shape =  -2948.198), loc.sp.form = ~1, scale.sp.form = ~1,
loc.temp.form = NULL, scale.temp.form = NULL,
dataprep = prep4spatml( loc.sp.form = ~1, scale.sp.form = ~1, data = get_uniq_bm(uu)), spat.cov = data.frame(lon = 1), scale.link = make.link("log"))
dataprep
blcksz <- 90
xx <- sapply(c(0.1, 0.4), function(x) evd::rgpd(10*blcksz, shape = x))
yy <- data.frame(xx) %>% tidyr::pivot_longer( 1:2, names_to = "Station", values_to = "Obs")
# define a temporal covariate that is constant over a block of length blcksz
temp_cvrt <- rep(1:10/10, each = blcksz)[1:(9*blcksz + 1)]
bms <- get_uniq_bm(yy, blcksz, temp_cvrt = temp_cvrt)
###############################
prep4spatml(loc.sp.form = ~ lon, scale.sp.form = ~ lon +lat,
loc.temp.form = ~ GMST, data = bms, spat.cov = data.frame( lon = c(1,2), lat = c(2,4)))
bms
YY <- data.frame(Station = X1, Obs = yy)
YY <- data.frame(Station = "X1", Obs = yy)
YY
YY <- data.frame(Station = "X1", Obs = yy)yy
yy
uu
YY <- data.frame(Station = "X1", Obs = uu)
YY
nll_spat_temp_sl_prep(params = c(loc = -1500.952 , scale =  2259.228, shape =  -2948.198), loc.sp.form = ~1, scale.sp.form = ~1,
loc.temp.form = NULL, scale.temp.form = NULL,
dataprep = prep4spatml( loc.sp.form = ~1, scale.sp.form = ~1, data = get_uniq_bm(uu)), spat.cov = data.frame(lon = 1), scale.link = make.link("log"))
dataprep
dataprep
prep4spatml( loc.sp.form = ~1, scale.sp.form = ~1, data = get_uniq_bm(uu))
get_uniq_bm(uu, blcksz = 90)
load_all()
rm(list = c("nll_spat_temp_sl_prep"))
load_all()
get_uniq_bm(uu, blcksz = 90)
uu
get_uniq_bm(YY, blcksz = 90)
nll_spat_temp_sl_prep(params = c(loc = -1500.952 , scale =  2259.228, shape =  -2948.198), loc.sp.form = ~1, scale.sp.form = ~1,
loc.temp.form = NULL, scale.temp.form = NULL,
dataprep = prep4spatml( loc.sp.form = ~1, scale.sp.form = ~1, data = get_uniq_bm(YY, blcksz = 5)), spat.cov = data.frame(lon = 1), scale.link = make.link("log"))
params.sp <- list(loc = params[startsWith(names(params),"loc")],
scale = params[startsWith(names(params),"scale")],
shape = params[startsWith(names(params),"shape")])
params.temp <- list(loc = params[startsWith(names(params),"tempLoc")],
scale = params[startsWith(names(params),"tempScale")])
params.temp <- purrr::map(params.temp, function(.x) ifelse(length(.x) == 0, 0, .x) )
model.loc.sp <- dataprep$MatLocSp
model.scale.sp <- dataprep$MatScaleSp
dataprep$MatLocSp
dataprep
model.loc.sp
model.scale.sp <- dataprep$MatScaleSp
loc_sp <- data.frame(loc_sp = model.loc.sp %*% params.sp$loc)
loc_sp
scale_sp <-  data.frame(scale_sp = model.scale.sp %*% params.sp$scale)
dataprep1 <- dataprep$data
dataprep1 <- dataprep1 %>% dplyr::bind_cols( loc_sp , scale_sp )
locpars <- dataprep1$loc_sp
locpars
model.matrix(~ 1, model.frame(~1,
data = data.frame(lon = 1:10), na.action = na.pass))
model.matrix(~ 1, model.frame(~1,
data = data.frame(lon = 1), na.action = na.pass))
prep4spatml(loc.sp.form = ~1, scale.sp.form = ~1, data = get_uniq_bm(YY, 5), spat.cov = data.frame(lon = 1))
nll_spat_temp_sl_prep(params = c(loc = -1500.952 , scale =  2259.228, shape =  -2948.198), loc.sp.form = ~1, scale.sp.form = ~1,
loc.temp.form = NULL, scale.temp.form = NULL,
dataprep = prep4spatml( loc.sp.form = ~1, scale.sp.form = ~1, data = get_uniq_bm(YY, blcksz = 5), spat.cov = data.frame(lon = 1)), spat.cov = data.frame(lon = 1), scale.link = make.link("log"))
params.sp <- list(loc = params[startsWith(names(params),"loc")],
scale = params[startsWith(names(params),"scale")],
shape = params[startsWith(names(params),"shape")])
dataprep
params.temp <- list(loc = params[startsWith(names(params),"tempLoc")],
scale = params[startsWith(names(params),"tempScale")])
params.temp <- purrr::map(params.temp, function(.x) ifelse(length(.x) == 0, 0, .x) )
model.loc.sp <- dataprep$MatLocSp
model.scale.sp <- dataprep$MatScaleSp
loc_sp <- data.frame(loc_sp = model.loc.sp %*% params.sp$loc)
scale_sp <-  data.frame(scale_sp = model.scale.sp %*% params.sp$scale)
dataprep1 <- dataprep$data
dataprep1 <- dataprep1 %>% dplyr::bind_cols( loc_sp , scale_sp )
dataprep1
locpars <- dataprep1$loc_sp
scalepars <- dataprep1$scale_sp
scalepars
locpars
params.sp$shape
dataprep1$uniq_data
yy <- purrr::map(dataprep1$uniq_data, ~ .x$slbm)
yy
link.scalepars <- scale.link$linkinv(scalepars)
link.scalepars
scalepars
yy <- purrr::pmap(list(.x = yy, .y = locpars, .z = link.scalepars),
function(.x, .y, .z) {
(1 + params.sp$shape*( (.x - .y)/.z))^(-1/params.sp$shape)
})
yy
nll_spat_temp_sl_prep(params = c(loc = -1500.952 , scale =  2259.228, shape =  -2948.198), loc.sp.form = ~1, scale.sp.form = ~1,
loc.temp.form = NULL, scale.temp.form = NULL,
dataprep = prep4spatml( loc.sp.form = ~1, scale.sp.form = ~1, data = get_uniq_bm(YY, blcksz = 5), spat.cov = data.frame(lon = 1)), spat.cov = data.frame(lon = 1), scale.link = make.link("log"), scale.link= "identity")
nll_spat_temp_sl_prep(params = c(loc = -1500.952 , scale =  2259.228, shape =  -2948.198), loc.sp.form = ~1, scale.sp.form = ~1,
loc.temp.form = NULL, scale.temp.form = NULL,
dataprep = prep4spatml( loc.sp.form = ~1, scale.sp.form = ~1, data = get_uniq_bm(YY, blcksz = 5), spat.cov = data.frame(lon = 1)), spat.cov = data.frame(lon = 1), scale.link = make.link("log"), scale.link = make.link("identity"))
nll_spat_temp_sl_prep(params = c(loc = -1500.952 , scale =  2259.228, shape =  -2948.198), loc.sp.form = ~1, scale.sp.form = ~1,
loc.temp.form = NULL, scale.temp.form = NULL,
dataprep = prep4spatml( loc.sp.form = ~1, scale.sp.form = ~1, data = get_uniq_bm(YY, blcksz = 5), spat.cov = data.frame(lon = 1)), spat.cov = data.frame(lon = 1),  scale.link = make.link("identity"))
params.sp <- list(loc = params[startsWith(names(params),"loc")],
scale = params[startsWith(names(params),"scale")],
shape = params[startsWith(names(params),"shape")])
params.temp <- list(loc = params[startsWith(names(params),"tempLoc")],
scale = params[startsWith(names(params),"tempScale")])
params.temp <- purrr::map(params.temp, function(.x) ifelse(length(.x) == 0, 0, .x) )
model.loc.sp <- dataprep$MatLocSp
model.scale.sp <- dataprep$MatScaleSp
loc_sp <- data.frame(loc_sp = model.loc.sp %*% params.sp$loc)
scale_sp <-  data.frame(scale_sp = model.scale.sp %*% params.sp$scale)
dataprep1 <- dataprep$data
dataprep1 <- dataprep1 %>% dplyr::bind_cols( loc_sp , scale_sp )
locpars <- dataprep1$loc_sp
scalepars <- dataprep1$scale_sp
yy <- purrr::map(dataprep1$uniq_data, ~ .x$slbm)
link.scalepars <- scale.link$linkinv(scalepars)
link.scalepars
yy <- purrr::pmap(list(.x = yy, .y = locpars, .z = link.scalepars),
function(.x, .y, .z) {
(1 + params.sp$shape*( (.x - .y)/.z))^(-1/params.sp$shape)
})
yy
stopyn <-  (any(unlist(purrr::map(yy, ~ any(.x < 0, na.rm = TRUE)))) |
any(unlist(link.scalepars ) <= 0))
stopyn
is.nan(log(0))
log(0)
log(-1)
is.nan(log(-1))
load_all()
nll_spat_temp_sl_prep(params = c(loc = -1500.952 , scale =  2259.228, shape =  -2948.198), loc.sp.form = ~1, scale.sp.form = ~1,
loc.temp.form = NULL, scale.temp.form = NULL,
dataprep = prep4spatml( loc.sp.form = ~1, scale.sp.form = ~1, data = get_uniq_bm(YY, blcksz = 5), spat.cov = data.frame(lon = 1)), spat.cov = data.frame(lon = 1),  scale.link = make.link("identity"))
params.sp <- list(loc = params[startsWith(names(params),"loc")],
scale = params[startsWith(names(params),"scale")],
shape = params[startsWith(names(params),"shape")])
params.temp <- list(loc = params[startsWith(names(params),"tempLoc")],
scale = params[startsWith(names(params),"tempScale")])
params.temp <- purrr::map(params.temp, function(.x) ifelse(length(.x) == 0, 0, .x) )
model.loc.sp <- dataprep$MatLocSp
model.scale.sp <- dataprep$MatScaleSp
loc_sp <- data.frame(loc_sp = model.loc.sp %*% params.sp$loc)
scale_sp <-  data.frame(scale_sp = model.scale.sp %*% params.sp$scale)
dataprep1 <- dataprep$data
dataprep1 <- dataprep1 %>% dplyr::bind_cols( loc_sp , scale_sp )
locpars <- dataprep1$loc_sp
scalepars <- dataprep1$scale_sp
yy <- purrr::map(dataprep1$uniq_data, ~ .x$slbm)
link.scalepars <- scale.link$linkinv(scalepars)
yy <- purrr::pmap(list(.x = yy, .y = locpars, .z = link.scalepars),
function(.x, .y, .z) {
(1 + params.sp$shape*( (.x - .y)/.z))^(-1/params.sp$shape)
})
yy
stopyn <-  (any(unlist(purrr::map(yy, ~ any(.x < 0, na.rm = TRUE)))) |
any(unlist(link.scalepars ) <= 0) |
(any(unlist(purrr::map(yy, ~ is.nan(.x))))))
stopyn
load_all()
nll_spat_temp_sl_prep(params = c(loc = -1500.952 , scale =  2259.228, shape =  -2948.198), loc.sp.form = ~1, scale.sp.form = ~1,
loc.temp.form = NULL, scale.temp.form = NULL,
dataprep = prep4spatml( loc.sp.form = ~1, scale.sp.form = ~1, data = get_uniq_bm(YY, blcksz = 5), spat.cov = data.frame(lon = 1)), spat.cov = data.frame(lon = 1),  scale.link = make.link("identity"))
nll_spat_temp_sl_prep(params = c(loc = -1500.952 , scale =  2259.228, shape =  -2948.198), loc.sp.form = ~1, scale.sp.form = ~1,
loc.temp.form = NULL, scale.temp.form = NULL,
dataprep = prep4spatml( loc.sp.form = ~1, scale.sp.form = ~1, data = get_uniq_bm(YY, blcksz = 5), spat.cov = data.frame(lon = 1)), spat.cov = data.frame(lon = 1),  scale.link = make.link("log"))
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ 1,
scale.sp.form = ~ 1, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSq", scale.link = make.link("identity"),
temp.cov = tempcv$smoothedGMST, REPORT = 1, trace = 100)
bmuniq
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ lon,
scale.sp.form = ~ 1, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSq", scale.link = make.link("identity"),
temp.cov = tempcv$smoothedGMST, REPORT = 1, trace = 100)
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ lon + lat,
scale.sp.form = ~ 1, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSq", scale.link = make.link("identity"),
temp.cov = tempcv$smoothedGMST, REPORT = 1, trace = 100)
fit_spgev_sl(data = bmuniq, loc.sp.form = ~ lon + lat,
scale.sp.form = ~ ele, spat.cov = spatial_cvrt,
datastart = djbm, st_val_meth = "LeastSqTemp", scale.link = make.link("log"),
temp.cov = tempcv$smoothedGMST, REPORT = 1, trace = 100)
devtools::build_vignettes()
library(slbm)
slbm::blockmax()
?slbm::blockmax
load_all()
document()
?blockmax
document()
?blockmax
devtools::build()
